{"/Users/BillyOrr/Desktop/project_team117/src/controller/IInsightFacade.ts":{"path":"/Users/BillyOrr/Desktop/project_team117/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":39,"6":39,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{"0":1,"1":39,"2":1,"3":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/BillyOrr/Desktop/project_team117/src/controller/IInsightFacade.ts","sources":["/Users/BillyOrr/Desktop/project_team117/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAUD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport type InsightResult = Record<string, string | number>;\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4e6482c43c897f56a7c06d13b4f339446847da5c","contentHash":"a855cbe42dcfb7d22d30ad94a4bc3a24de3e9b838ffb58828c0edbb3dcc4472a"},"/Users/BillyOrr/Desktop/project_team117/src/controller/InsightFacade.ts":{"path":"/Users/BillyOrr/Desktop/project_team117/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":42}},"26":{"start":{"line":27,"column":25},"end":{"line":27,"column":52}},"27":{"start":{"line":28,"column":14},"end":{"line":28,"column":30}},"28":{"start":{"line":29,"column":11},"end":{"line":29,"column":44}},"29":{"start":{"line":30,"column":13},"end":{"line":30,"column":42}},"30":{"start":{"line":31,"column":16},"end":{"line":31,"column":42}},"31":{"start":{"line":32,"column":17},"end":{"line":32,"column":44}},"32":{"start":{"line":33,"column":19},"end":{"line":33,"column":48}},"33":{"start":{"line":34,"column":21},"end":{"line":34,"column":58}},"34":{"start":{"line":35,"column":25},"end":{"line":35,"column":60}},"35":{"start":{"line":37,"column":15},"end":{"line":37,"column":24}},"36":{"start":{"line":41,"column":8},"end":{"line":41,"column":56}},"37":{"start":{"line":42,"column":8},"end":{"line":44,"column":11}},"38":{"start":{"line":43,"column":12},"end":{"line":43,"column":46}},"39":{"start":{"line":47,"column":8},"end":{"line":63,"column":9}},"40":{"start":{"line":48,"column":26},"end":{"line":48,"column":56}},"41":{"start":{"line":49,"column":30},"end":{"line":49,"column":76}},"42":{"start":{"line":49,"column":53},"end":{"line":49,"column":75}},"43":{"start":{"line":50,"column":36},"end":{"line":59,"column":14}},"44":{"start":{"line":51,"column":33},"end":{"line":51,"column":62}},"45":{"start":{"line":52,"column":16},"end":{"line":58,"column":17}},"46":{"start":{"line":53,"column":36},"end":{"line":53,"column":63}},"47":{"start":{"line":54,"column":31},"end":{"line":54,"column":59}},"48":{"start":{"line":55,"column":20},"end":{"line":55,"column":51}},"49":{"start":{"line":60,"column":12},"end":{"line":60,"column":47}},"50":{"start":{"line":66,"column":27},"end":{"line":66,"column":32}},"51":{"start":{"line":67,"column":8},"end":{"line":83,"column":9}},"52":{"start":{"line":68,"column":12},"end":{"line":68,"column":52}},"53":{"start":{"line":69,"column":24},"end":{"line":69,"column":60}},"54":{"start":{"line":70,"column":28},"end":{"line":70,"column":70}},"55":{"start":{"line":71,"column":12},"end":{"line":71,"column":43}},"56":{"start":{"line":72,"column":12},"end":{"line":72,"column":32}},"57":{"start":{"line":73,"column":12},"end":{"line":73,"column":51}},"58":{"start":{"line":74,"column":12},"end":{"line":74,"column":52}},"59":{"start":{"line":77,"column":12},"end":{"line":81,"column":13}},"60":{"start":{"line":78,"column":16},"end":{"line":78,"column":41}},"61":{"start":{"line":79,"column":33},"end":{"line":79,"column":70}},"62":{"start":{"line":80,"column":16},"end":{"line":80,"column":42}},"63":{"start":{"line":82,"column":12},"end":{"line":82,"column":37}},"64":{"start":{"line":87,"column":8},"end":{"line":107,"column":9}},"65":{"start":{"line":88,"column":32},"end":{"line":88,"column":67}},"66":{"start":{"line":89,"column":29},"end":{"line":89,"column":82}},"67":{"start":{"line":90,"column":12},"end":{"line":94,"column":14}},"68":{"start":{"line":96,"column":13},"end":{"line":107,"column":9}},"69":{"start":{"line":97,"column":30},"end":{"line":97,"column":71}},"70":{"start":{"line":98,"column":26},"end":{"line":98,"column":77}},"71":{"start":{"line":99,"column":12},"end":{"line":103,"column":14}},"72":{"start":{"line":106,"column":12},"end":{"line":106,"column":91}},"73":{"start":{"line":108,"column":8},"end":{"line":108,"column":23}},"74":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"75":{"start":{"line":112,"column":12},"end":{"line":112,"column":94}},"76":{"start":{"line":114,"column":8},"end":{"line":122,"column":9}},"77":{"start":{"line":115,"column":29},"end":{"line":115,"column":66}},"78":{"start":{"line":116,"column":12},"end":{"line":121,"column":13}},"79":{"start":{"line":117,"column":16},"end":{"line":117,"column":42}},"80":{"start":{"line":120,"column":16},"end":{"line":120,"column":122}},"81":{"start":{"line":123,"column":8},"end":{"line":129,"column":9}},"82":{"start":{"line":124,"column":29},"end":{"line":124,"column":66}},"83":{"start":{"line":125,"column":12},"end":{"line":125,"column":38}},"84":{"start":{"line":128,"column":12},"end":{"line":128,"column":113}},"85":{"start":{"line":130,"column":8},"end":{"line":130,"column":33}},"86":{"start":{"line":131,"column":8},"end":{"line":131,"column":35}},"87":{"start":{"line":134,"column":8},"end":{"line":134,"column":25}},"88":{"start":{"line":135,"column":29},"end":{"line":135,"column":31}},"89":{"start":{"line":136,"column":8},"end":{"line":142,"column":9}},"90":{"start":{"line":137,"column":12},"end":{"line":141,"column":15}},"91":{"start":{"line":143,"column":8},"end":{"line":143,"column":28}},"92":{"start":{"line":146,"column":8},"end":{"line":146,"column":25}},"93":{"start":{"line":147,"column":8},"end":{"line":147,"column":42}},"94":{"start":{"line":148,"column":22},"end":{"line":148,"column":28}},"95":{"start":{"line":149,"column":8},"end":{"line":149,"column":67}},"96":{"start":{"line":150,"column":24},"end":{"line":150,"column":64}},"97":{"start":{"line":152,"column":8},"end":{"line":162,"column":9}},"98":{"start":{"line":153,"column":12},"end":{"line":153,"column":43}},"99":{"start":{"line":154,"column":12},"end":{"line":154,"column":38}},"100":{"start":{"line":156,"column":13},"end":{"line":162,"column":9}},"101":{"start":{"line":157,"column":12},"end":{"line":157,"column":40}},"102":{"start":{"line":158,"column":12},"end":{"line":158,"column":35}},"103":{"start":{"line":161,"column":12},"end":{"line":161,"column":98}},"104":{"start":{"line":163,"column":28},"end":{"line":163,"column":85}},"105":{"start":{"line":164,"column":29},"end":{"line":164,"column":67}},"106":{"start":{"line":165,"column":30},"end":{"line":165,"column":98}},"107":{"start":{"line":166,"column":28},"end":{"line":166,"column":81}},"108":{"start":{"line":167,"column":30},"end":{"line":167,"column":34}},"109":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"110":{"start":{"line":169,"column":12},"end":{"line":169,"column":85}},"111":{"start":{"line":171,"column":8},"end":{"line":171,"column":46}},"112":{"start":{"line":172,"column":8},"end":{"line":172,"column":27}},"113":{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},"114":{"start":{"line":176,"column":12},"end":{"line":176,"column":25}},"115":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"116":{"start":{"line":179,"column":12},"end":{"line":179,"column":25}},"117":{"start":{"line":181,"column":8},"end":{"line":183,"column":9}},"118":{"start":{"line":182,"column":12},"end":{"line":182,"column":25}},"119":{"start":{"line":184,"column":8},"end":{"line":184,"column":20}},"120":{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},"121":{"start":{"line":188,"column":12},"end":{"line":188,"column":77}},"122":{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},"123":{"start":{"line":191,"column":12},"end":{"line":191,"column":122}},"124":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"125":{"start":{"line":194,"column":12},"end":{"line":194,"column":102}},"126":{"start":{"line":199,"column":8},"end":{"line":204,"column":9}},"127":{"start":{"line":200,"column":12},"end":{"line":200,"column":53}},"128":{"start":{"line":203,"column":12},"end":{"line":203,"column":113}},"129":{"start":{"line":206,"column":8},"end":{"line":211,"column":9}},"130":{"start":{"line":207,"column":12},"end":{"line":207,"column":49}},"131":{"start":{"line":210,"column":12},"end":{"line":210,"column":108}},"132":{"start":{"line":212,"column":8},"end":{"line":212,"column":19}},"133":{"start":{"line":215,"column":25},"end":{"line":215,"column":62}},"134":{"start":{"line":216,"column":8},"end":{"line":221,"column":9}},"135":{"start":{"line":217,"column":12},"end":{"line":217,"column":50}},"136":{"start":{"line":220,"column":12},"end":{"line":220,"column":95}},"137":{"start":{"line":224,"column":24},"end":{"line":224,"column":45}},"138":{"start":{"line":225,"column":8},"end":{"line":227,"column":9}},"139":{"start":{"line":226,"column":12},"end":{"line":226,"column":27}},"140":{"start":{"line":228,"column":25},"end":{"line":228,"column":62}},"141":{"start":{"line":229,"column":8},"end":{"line":241,"column":9}},"142":{"start":{"line":230,"column":36},"end":{"line":230,"column":63}},"143":{"start":{"line":231,"column":12},"end":{"line":237,"column":13}},"144":{"start":{"line":232,"column":16},"end":{"line":232,"column":55}},"145":{"start":{"line":233,"column":16},"end":{"line":233,"column":39}},"146":{"start":{"line":236,"column":16},"end":{"line":236,"column":117}},"147":{"start":{"line":240,"column":12},"end":{"line":240,"column":109}},"148":{"start":{"line":244,"column":0},"end":{"line":244,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":18},"end":{"line":45,"column":5}},"line":40},"7":{"name":"(anonymous_7)","decl":{"start":{"line":42,"column":53},"end":{"line":42,"column":54}},"loc":{"start":{"line":42,"column":65},"end":{"line":44,"column":9}},"line":42},"8":{"name":"(anonymous_8)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":33},"end":{"line":64,"column":5}},"line":46},"9":{"name":"(anonymous_9)","decl":{"start":{"line":49,"column":43},"end":{"line":49,"column":44}},"loc":{"start":{"line":49,"column":53},"end":{"line":49,"column":75}},"line":49},"10":{"name":"(anonymous_10)","decl":{"start":{"line":50,"column":50},"end":{"line":50,"column":51}},"loc":{"start":{"line":50,"column":66},"end":{"line":59,"column":13}},"line":50},"11":{"name":"(anonymous_11)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":40},"end":{"line":84,"column":5}},"line":65},"12":{"name":"(anonymous_12)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":42},"end":{"line":109,"column":5}},"line":85},"13":{"name":"(anonymous_13)","decl":{"start":{"line":110,"column":4},"end":{"line":110,"column":5}},"loc":{"start":{"line":110,"column":28},"end":{"line":132,"column":5}},"line":110},"14":{"name":"(anonymous_14)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":25},"end":{"line":144,"column":5}},"line":133},"15":{"name":"(anonymous_15)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":31},"end":{"line":173,"column":5}},"line":145},"16":{"name":"(anonymous_16)","decl":{"start":{"line":174,"column":4},"end":{"line":174,"column":5}},"loc":{"start":{"line":174,"column":18},"end":{"line":185,"column":5}},"line":174},"17":{"name":"(anonymous_17)","decl":{"start":{"line":186,"column":4},"end":{"line":186,"column":5}},"loc":{"start":{"line":186,"column":39},"end":{"line":196,"column":5}},"line":186},"18":{"name":"(anonymous_18)","decl":{"start":{"line":197,"column":4},"end":{"line":197,"column":5}},"loc":{"start":{"line":197,"column":36},"end":{"line":213,"column":5}},"line":197},"19":{"name":"(anonymous_19)","decl":{"start":{"line":214,"column":4},"end":{"line":214,"column":5}},"loc":{"start":{"line":214,"column":38},"end":{"line":222,"column":5}},"line":214},"20":{"name":"(anonymous_20)","decl":{"start":{"line":223,"column":4},"end":{"line":223,"column":5}},"loc":{"start":{"line":223,"column":25},"end":{"line":242,"column":5}},"line":223}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":77,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":77,"column":12},"end":{"line":81,"column":13}},{"start":{"line":77,"column":12},"end":{"line":81,"column":13}}],"line":77},"17":{"loc":{"start":{"line":87,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":107,"column":9}},{"start":{"line":87,"column":8},"end":{"line":107,"column":9}}],"line":87},"18":{"loc":{"start":{"line":96,"column":13},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":96,"column":13},"end":{"line":107,"column":9}},{"start":{"line":96,"column":13},"end":{"line":107,"column":9}}],"line":96},"19":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{"line":111,"column":8},"end":{"line":113,"column":9}}],"line":111},"20":{"loc":{"start":{"line":114,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":122,"column":9}},{"start":{"line":114,"column":8},"end":{"line":122,"column":9}}],"line":114},"21":{"loc":{"start":{"line":152,"column":8},"end":{"line":162,"column":9}},"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":162,"column":9}},{"start":{"line":152,"column":8},"end":{"line":162,"column":9}}],"line":152},"22":{"loc":{"start":{"line":152,"column":12},"end":{"line":152,"column":93}},"type":"binary-expr","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":73}},{"start":{"line":152,"column":77},"end":{"line":152,"column":93}}],"line":152},"23":{"loc":{"start":{"line":156,"column":13},"end":{"line":162,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":13},"end":{"line":162,"column":9}},{"start":{"line":156,"column":13},"end":{"line":162,"column":9}}],"line":156},"24":{"loc":{"start":{"line":156,"column":17},"end":{"line":156,"column":92}},"type":"binary-expr","locations":[{"start":{"line":156,"column":17},"end":{"line":156,"column":75}},{"start":{"line":156,"column":79},"end":{"line":156,"column":92}}],"line":156},"25":{"loc":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},{"start":{"line":168,"column":8},"end":{"line":170,"column":9}}],"line":168},"26":{"loc":{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},{"start":{"line":175,"column":8},"end":{"line":177,"column":9}}],"line":175},"27":{"loc":{"start":{"line":175,"column":12},"end":{"line":175,"column":41}},"type":"binary-expr","locations":[{"start":{"line":175,"column":12},"end":{"line":175,"column":15}},{"start":{"line":175,"column":19},"end":{"line":175,"column":41}}],"line":175},"28":{"loc":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},{"start":{"line":178,"column":8},"end":{"line":180,"column":9}}],"line":178},"29":{"loc":{"start":{"line":181,"column":8},"end":{"line":183,"column":9}},"type":"if","locations":[{"start":{"line":181,"column":8},"end":{"line":183,"column":9}},{"start":{"line":181,"column":8},"end":{"line":183,"column":9}}],"line":181},"30":{"loc":{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},{"start":{"line":187,"column":8},"end":{"line":189,"column":9}}],"line":187},"31":{"loc":{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":192,"column":9}},{"start":{"line":190,"column":8},"end":{"line":192,"column":9}}],"line":190},"32":{"loc":{"start":{"line":190,"column":12},"end":{"line":190,"column":119}},"type":"binary-expr","locations":[{"start":{"line":190,"column":12},"end":{"line":190,"column":65}},{"start":{"line":190,"column":69},"end":{"line":190,"column":119}}],"line":190},"33":{"loc":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},{"start":{"line":193,"column":8},"end":{"line":195,"column":9}}],"line":193},"34":{"loc":{"start":{"line":225,"column":8},"end":{"line":227,"column":9}},"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":227,"column":9}},{"start":{"line":225,"column":8},"end":{"line":227,"column":9}}],"line":225},"35":{"loc":{"start":{"line":231,"column":12},"end":{"line":237,"column":13}},"type":"if","locations":[{"start":{"line":231,"column":12},"end":{"line":237,"column":13}},{"start":{"line":231,"column":12},"end":{"line":237,"column":13}}],"line":231},"36":{"loc":{"start":{"line":231,"column":16},"end":{"line":231,"column":77}},"type":"binary-expr","locations":[{"start":{"line":231,"column":16},"end":{"line":231,"column":36}},{"start":{"line":231,"column":40},"end":{"line":231,"column":77}}],"line":231}},"s":{"0":1,"1":164,"2":164,"3":164,"4":164,"5":164,"6":90,"7":164,"8":0,"9":0,"10":0,"11":1,"12":2,"13":0,"14":1,"15":2,"16":0,"17":2,"18":2,"19":2,"20":164,"21":164,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":22,"36":22,"37":22,"38":22,"39":22,"40":22,"41":22,"42":0,"43":22,"44":0,"45":0,"46":0,"47":0,"48":0,"49":22,"50":22,"51":22,"52":22,"53":19,"54":18,"55":10,"56":10,"57":10,"58":10,"59":12,"60":0,"61":0,"62":0,"63":12,"64":18,"65":16,"66":13,"67":9,"68":2,"69":2,"70":1,"71":1,"72":0,"73":10,"74":4,"75":2,"76":2,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":0,"85":1,"86":1,"87":3,"88":3,"89":3,"90":2,"91":3,"92":34,"93":34,"94":29,"95":29,"96":29,"97":29,"98":25,"99":25,"100":4,"101":4,"102":4,"103":0,"104":29,"105":11,"106":11,"107":11,"108":9,"109":9,"110":1,"111":8,"112":8,"113":26,"114":2,"115":24,"116":0,"117":24,"118":2,"119":22,"120":22,"121":2,"122":20,"123":0,"124":20,"125":1,"126":19,"127":19,"128":0,"129":19,"130":19,"131":1,"132":18,"133":10,"134":10,"135":10,"136":0,"137":29,"138":29,"139":29,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":1},"f":{"0":164,"1":90,"2":0,"3":2,"4":0,"5":2,"6":22,"7":22,"8":22,"9":0,"10":0,"11":22,"12":18,"13":4,"14":3,"15":34,"16":26,"17":22,"18":19,"19":10,"20":29},"b":{"0":[1,1,1],"1":[1,0],"2":[164,0],"3":[164,0],"4":[164,164],"5":[0,164],"6":[164,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,2],"12":[2,2],"13":[2,0],"14":[164,0],"15":[164,164],"16":[0,12],"17":[16,2],"18":[2,0],"19":[2,2],"20":[1,1],"21":[25,4],"22":[29,25],"23":[4,0],"24":[4,4],"25":[1,8],"26":[2,24],"27":[26,25],"28":[0,24],"29":[2,22],"30":[2,20],"31":[0,20],"32":[20,2],"33":[1,19],"34":[29,0],"35":[0,0],"36":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/BillyOrr/Desktop/project_team117/src/controller/InsightFacade.ts","sources":["/Users/BillyOrr/Desktop/project_team117/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["// InsightFacade.ts\n\nimport {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightResult,\n\tInsightError,\n\tNotFoundError,\n\tResultTooLargeError,\n} from \"./IInsightFacade\";\nimport JSZip = require(\"jszip\"); // Import JSZip\nimport * as fs from \"fs-extra\"; // Import fs-extra\nimport * as path from \"path\"; // Import path\nimport { IsQueryValid, ParseQuery, ApplyOptions } from \"../models/Query\";\nimport { ApplyFilter } from \"../models/Filter\";\nimport { Query } from \"../models/QueryInterfaces\";\nimport { Section, getCourseFiles, processCourseFiles } from \"../models/Sections\"; // Import Section class and helpers\nimport { Room } from \"../models/rooms/Rooms\";\nimport { getRoomFiles, processRoomFiles } from \"../models/rooms/RoomParser\";\nimport { applyKeys, ApplyTransformation } from \"../models/Transformation\";\n//import { ApplyTransformation } from \"../models/Transformation\";\n\ninterface Dataset {\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n\tsections?: Section[];\n\trooms?: Room[];\n}\n\nexport let DATASETID: string;\nexport let KIND: string;\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tprivate datasets = new Map<string, Dataset>();\n\tprivate dataDir: string;\n\tprivate ready: Promise<void>;\n\n\tconstructor() {\n\t\tthis.dataDir = path.join(process.cwd(), \"data\");\n\t\tthis.ready = fs.ensureDir(this.dataDir).then(async () => {\n\t\t\tawait this.loadDatasetsFromDisk();\n\t\t});\n\t}\n\n\tprivate async loadDatasetsFromDisk(): Promise<void> {\n\t\ttry {\n\t\t\tconst files = await fs.readdir(this.dataDir);\n\t\t\tconst jsonFiles = files.filter((file) => file.endsWith(\".json\"));\n\n\t\t\tconst datasetPromises = jsonFiles.map(async (file) => {\n\t\t\t\tconst filePath = path.join(this.dataDir, file);\n\t\t\t\ttry {\n\t\t\t\t\tconst dataset = await fs.readJson(filePath);\n\t\t\t\t\tconst id = path.basename(file, \".json\");\n\t\t\t\t\tthis.datasets.set(id, dataset);\n\t\t\t\t} catch {\n\t\t\t\t\t// Handle errors if necessary\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tawait Promise.all(datasetPromises);\n\t\t} catch {\n\t\t\t// Handle errors if necessary\n\t\t}\n\t}\n\n\t//////////////////////////////////////////////////////////////////\n\t////////////////////////// addDataset() //////////////////////////\n\t//////////////////////////////////////////////////////////////////\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tlet datasetAdded = false; // Flag to indicate if dataset was added during this call\n\t\ttry {\n\t\t\t// Step 1: Validate inputs\n\t\t\tthis.validateAddDatasetInputs(id, kind);\n\n\t\t\t// Step 2: Decode zip content\n\t\t\tconst zip = await this.decodeZipContent(content);\n\n\t\t\t// Step 3: Process dataset based on the kind\n\t\t\tconst dataset = await this.processDatasetByKind(kind, zip);\n\n\t\t\t// Step 4: Store the dataset\n\t\t\tthis.datasets.set(id, dataset);\n\t\t\tdatasetAdded = true; // Dataset has been added\n\n\t\t\t// Step 5: Persist the dataset to disk\n\t\t\tawait this.persistDataset(id, dataset);\n\n\t\t\t// Step 6: Return list of dataset ids\n\t\t\treturn Array.from(this.datasets.keys());\n\t\t} catch (e) {\n\t\t\t// Only remove the dataset if it was added during this call\n\t\t\tif (datasetAdded) {\n\t\t\t\tthis.datasets.delete(id);\n\t\t\t\t// Also consider deleting the persisted file if necessary\n\t\t\t\tconst filePath = path.join(this.dataDir, `${id}.json`);\n\t\t\t\tawait fs.remove(filePath);\n\t\t\t}\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\t// Combined helper to process dataset by kind\n\tprivate async processDatasetByKind(kind: InsightDatasetKind, zip: JSZip): Promise<Dataset> {\n\t\tlet dataset: Dataset;\n\n\t\tif (kind === InsightDatasetKind.Sections) {\n\t\t\t// Step 3a: Get course files\n\t\t\tconst courseFiles = getCourseFiles(zip);\n\n\t\t\t// Step 4a: Process course files\n\t\t\tconst sections = await processCourseFiles(courseFiles);\n\n\t\t\tdataset = {\n\t\t\t\tkind: kind,\n\t\t\t\tsections: sections,\n\t\t\t\tnumRows: sections.length,\n\t\t\t};\n\t\t} else if (kind === InsightDatasetKind.Rooms) {\n\t\t\t// Step 3b: Get room files\n\t\t\tconst roomFiles = await getRoomFiles(zip);\n\n\t\t\t// Step 4b: Process room files\n\t\t\tconst rooms = await processRoomFiles(roomFiles);\n\n\t\t\tdataset = {\n\t\t\t\tkind: kind,\n\t\t\t\trooms: rooms,\n\t\t\t\tnumRows: rooms.length,\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new InsightError(\"Unsupported dataset kind - Team 117\");\n\t\t}\n\n\t\treturn dataset;\n\t}\n\n\t//////////////////////////////////////////////////////////////////\n\t///////////////////////// removeDataset() ////////////////////////\n\t//////////////////////////////////////////////////////////////////\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\t// Validate id\n\t\tif (!this.isValidId(id)) {\n\t\t\treturn Promise.reject(new InsightError(\"Invalid id - Team 117\"));\n\t\t}\n\n\t\t// Check if dataset exists in memory\n\t\tif (!this.datasets.has(id)) {\n\t\t\t// Try to check if the dataset exists on disk\n\t\t\tconst filePath = path.join(this.dataDir, `${id}.json`);\n\t\t\ttry {\n\t\t\t\tawait fs.access(filePath);\n\t\t\t} catch {\n\t\t\t\t// Dataset does not exist\n\t\t\t\treturn Promise.reject(new NotFoundError(`Dataset with id \"${id}\" not found - Team 117`));\n\t\t\t}\n\t\t}\n\n\t\t// Remove the dataset file from disk\n\t\ttry {\n\t\t\tconst filePath = path.join(this.dataDir, `${id}.json`);\n\t\t\tawait fs.unlink(filePath);\n\t\t} catch {\n\t\t\treturn Promise.reject(new InsightError(`Failed to remove dataset file - Team 117`));\n\t\t}\n\n\t\t// Remove the dataset from the in-memory Map\n\t\tthis.datasets.delete(id);\n\n\t\t// Return the id of the removed dataset\n\t\treturn Promise.resolve(id);\n\t}\n\n\t//////////////////////////////////////////////////////////////////\n\t////////////////////////// listDatasets() ////////////////////////\n\t//////////////////////////////////////////////////////////////////\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\tawait this.ready; // Ensure datasets are loaded\n\t\tconst datasetsList: InsightDataset[] = [];\n\n\t\tfor (const [id, dataset] of this.datasets) {\n\t\t\tdatasetsList.push({\n\t\t\t\tid: id,\n\t\t\t\tkind: dataset.kind,\n\t\t\t\tnumRows: dataset.numRows,\n\t\t\t});\n\t\t}\n\n\t\treturn datasetsList;\n\t}\n\n\t//////////////////////////////////////////////////////////////////\n\t///////////////////////// performQuery() /////////////////////////\n\t//////////////////////////////////////////////////////////////////\n\n\tpublic async performQuery(uquery: unknown): Promise<InsightResult[]> {\n\t\tawait this.ready; // Ensure datasets are loaded\n\t\tIsQueryValid(uquery); // Format check\n\t\tconst query = uquery as Query;\n\t\tDATASETID = query.OPTIONS.COLUMNS[0].split(\"_\")[0];\n\n\t\t// Load the dataset lazily\n\t\tconst dataset = await this.getDataset(DATASETID);\n\n\t\t// Determine if the dataset is sections or rooms\n\t\tlet dataToQuery: any[];\n\t\tif (dataset.kind === InsightDatasetKind.Sections && dataset.sections) {\n\t\t\tdataToQuery = dataset.sections;\n\t\t\tKIND = \"sections\";\n\t\t} else if (dataset.kind === InsightDatasetKind.Rooms && dataset.rooms) {\n\t\t\tdataToQuery = dataset.rooms;\n\t\t\tKIND = \"rooms\";\n\t\t} else {\n\t\t\tthrow new InsightError(\"Dataset does not exist or has invalid kind\");\n\t\t}\n\n\t\tconst queryObject = ParseQuery(query, dataToQuery, KIND); // Parse query to a query object\n\t\t//console.log(queryObject.transformation);\n\t\tconst filteredData = ApplyFilter(queryObject);\n\t\tconst transformData = ApplyTransformation(queryObject, filteredData);\n\t\tconst finalResult = ApplyOptions(queryObject, transformData);\n\n\t\tconst maximumNumber = 5000;\n\t\tif (finalResult.length > maximumNumber) {\n\t\t\tthrow new ResultTooLargeError(\"more than 5000 results\");\n\t\t}\n\t\tapplyKeys.length = 0;\n\t\treturn finalResult;\n\t}\n\n\t//////////////////////////////////////////////////////////////////\n\t///////////////////////////// Helpers ////////////////////////////\n\t//////////////////////////////////////////////////////////////////\n\n\tprivate isValidId(id: string): boolean {\n\t\tif (!id || id.trim().length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\t// id cannot contain whitespace\n\t\tif (/\\s/.test(id)) {\n\t\t\treturn false;\n\t\t}\n\t\t// id cannot contain underscores\n\t\tif (/_/.test(id)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate validateAddDatasetInputs(id: string, kind: InsightDatasetKind): void {\n\t\tif (!this.isValidId(id)) {\n\t\t\tthrow new InsightError(\"Invalid id - Team 117\");\n\t\t}\n\n\t\tif (kind !== InsightDatasetKind.Sections && kind !== InsightDatasetKind.Rooms) {\n\t\t\tthrow new InsightError(\"Invalid kind: Only 'sections' and 'rooms' are supported - Team 117\");\n\t\t}\n\n\t\tif (this.datasets.has(id)) {\n\t\t\tthrow new InsightError(\"Dataset with this id already exists - Team 117\");\n\t\t}\n\t}\n\n\tprivate async decodeZipContent(content: string): Promise<JSZip> {\n\t\tlet zipData: Buffer;\n\t\ttry {\n\t\t\tzipData = Buffer.from(content, \"base64\");\n\t\t} catch (e) {\n\t\t\tthrow new InsightError(`Failed to decode base64 content - Team 117. Error is ${e}`);\n\t\t}\n\n\t\tlet zip: JSZip;\n\t\ttry {\n\t\t\tzip = await JSZip.loadAsync(zipData);\n\t\t} catch (e) {\n\t\t\tthrow new InsightError(`Failed to load zip content - Team 117. Error is ${e}`);\n\t\t}\n\n\t\treturn zip;\n\t}\n\n\tprivate async persistDataset(id: string, dataset: any): Promise<void> {\n\t\tconst filePath = path.join(this.dataDir, `${id}.json`);\n\t\ttry {\n\t\t\tawait fs.writeJson(filePath, dataset);\n\t\t} catch (e) {\n\t\t\tthrow new InsightError(`Failed to persist dataset to disk: ${e}`);\n\t\t}\n\t}\n\n\tprivate async getDataset(id: string): Promise<Dataset> {\n\t\tconst dataset = this.datasets.get(id);\n\t\tif (dataset) {\n\t\t\treturn dataset; // Return the dataset if it's found in memory\n\t\t}\n\n\t\t// If the dataset is not in memory, try to load it from disk\n\t\tconst filePath = path.join(this.dataDir, `${id}.json`);\n\t\ttry {\n\t\t\tconst datasetFromDisk = await fs.readJson(filePath);\n\n\t\t\t// Validate the dataset structure\n\t\t\tif (datasetFromDisk.kind && datasetFromDisk.numRows !== undefined) {\n\t\t\t\tthis.datasets.set(id, datasetFromDisk); // Cache it in memory\n\t\t\t\treturn datasetFromDisk;\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(`Dataset with id \"${id}\" has invalid structure. - Team 117`);\n\t\t\t}\n\t\t} catch {\n\t\t\tthrow new InsightError(`Dataset with id \"${id}\" not found on disk. - Team 117`);\n\t\t}\n\t}\n\n\t// Other helper methods remain here\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3bc663e0e5e979330227ed77e437248a44ac5328","contentHash":"708d6401fbfdca197f9db6174d7387134a8af4ee56eb167b6c44dfb507032550"},"/Users/BillyOrr/Desktop/project_team117/src/models/Query.ts":{"path":"/Users/BillyOrr/Desktop/project_team117/src/models/Query.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":280}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":25},"end":{"line":7,"column":52}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":64}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"9":{"start":{"line":12,"column":18},"end":{"line":12,"column":24}},"10":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":65}},"12":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":69}},"14":{"start":{"line":19,"column":4},"end":{"line":23,"column":5}},"15":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"16":{"start":{"line":21,"column":12},"end":{"line":21,"column":127}},"17":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"18":{"start":{"line":25,"column":8},"end":{"line":25,"column":68}},"19":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"20":{"start":{"line":28,"column":8},"end":{"line":28,"column":81}},"21":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"22":{"start":{"line":31,"column":8},"end":{"line":31,"column":70}},"23":{"start":{"line":33,"column":4},"end":{"line":33,"column":30}},"24":{"start":{"line":34,"column":4},"end":{"line":34,"column":16}},"25":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}},"26":{"start":{"line":38,"column":18},"end":{"line":38,"column":24}},"27":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"28":{"start":{"line":40,"column":8},"end":{"line":40,"column":87}},"29":{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},"30":{"start":{"line":45,"column":8},"end":{"line":45,"column":69}},"31":{"start":{"line":47,"column":4},"end":{"line":52,"column":5}},"32":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"33":{"start":{"line":50,"column":12},"end":{"line":50,"column":81}},"34":{"start":{"line":54,"column":0},"end":{"line":54,"column":46}},"35":{"start":{"line":56,"column":20},"end":{"line":56,"column":37}},"36":{"start":{"line":57,"column":27},"end":{"line":57,"column":48}},"37":{"start":{"line":58,"column":4},"end":{"line":75,"column":5}},"38":{"start":{"line":59,"column":8},"end":{"line":73,"column":9}},"39":{"start":{"line":60,"column":12},"end":{"line":64,"column":14}},"40":{"start":{"line":66,"column":13},"end":{"line":73,"column":9}},"41":{"start":{"line":67,"column":12},"end":{"line":72,"column":14}},"42":{"start":{"line":74,"column":8},"end":{"line":74,"column":77}},"43":{"start":{"line":76,"column":4},"end":{"line":76,"column":49}},"44":{"start":{"line":78,"column":0},"end":{"line":78,"column":32}},"45":{"start":{"line":80,"column":20},"end":{"line":80,"column":37}},"46":{"start":{"line":81,"column":22},"end":{"line":81,"column":60}},"47":{"start":{"line":82,"column":27},"end":{"line":82,"column":48}},"48":{"start":{"line":83,"column":19},"end":{"line":83,"column":78}},"49":{"start":{"line":84,"column":4},"end":{"line":100,"column":5}},"50":{"start":{"line":85,"column":8},"end":{"line":90,"column":10}},"51":{"start":{"line":92,"column":9},"end":{"line":100,"column":5}},"52":{"start":{"line":93,"column":8},"end":{"line":99,"column":10}},"53":{"start":{"line":101,"column":4},"end":{"line":101,"column":73}},"54":{"start":{"line":103,"column":0},"end":{"line":103,"column":42}},"55":{"start":{"line":105,"column":20},"end":{"line":105,"column":41}},"56":{"start":{"line":106,"column":18},"end":{"line":106,"column":37}},"57":{"start":{"line":107,"column":22},"end":{"line":113,"column":45}},"58":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"59":{"start":{"line":110,"column":12},"end":{"line":110,"column":40}},"60":{"start":{"line":113,"column":26},"end":{"line":113,"column":44}},"61":{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},"62":{"start":{"line":114,"column":34},"end":{"line":114,"column":54}},"63":{"start":{"line":115,"column":8},"end":{"line":115,"column":77}},"64":{"start":{"line":117,"column":25},"end":{"line":124,"column":6}},"65":{"start":{"line":118,"column":8},"end":{"line":123,"column":9}},"66":{"start":{"line":119,"column":12},"end":{"line":119,"column":40}},"67":{"start":{"line":122,"column":12},"end":{"line":122,"column":26}},"68":{"start":{"line":125,"column":4},"end":{"line":138,"column":5}},"69":{"start":{"line":126,"column":8},"end":{"line":128,"column":10}},"70":{"start":{"line":130,"column":9},"end":{"line":138,"column":5}},"71":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"72":{"start":{"line":132,"column":12},"end":{"line":132,"column":75}},"73":{"start":{"line":134,"column":8},"end":{"line":137,"column":10}},"74":{"start":{"line":139,"column":4},"end":{"line":139,"column":61}},"75":{"start":{"line":141,"column":16},"end":{"line":141,"column":79}},"76":{"start":{"line":142,"column":16},"end":{"line":156,"column":1}},"77":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"78":{"start":{"line":159,"column":8},"end":{"line":159,"column":79}},"79":{"start":{"line":161,"column":18},"end":{"line":161,"column":43}},"80":{"start":{"line":162,"column":23},"end":{"line":162,"column":39}},"81":{"start":{"line":163,"column":21},"end":{"line":163,"column":40}},"82":{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},"83":{"start":{"line":165,"column":8},"end":{"line":165,"column":70}},"84":{"start":{"line":167,"column":20},"end":{"line":167,"column":39}},"85":{"start":{"line":168,"column":4},"end":{"line":175,"column":5}},"86":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"87":{"start":{"line":170,"column":12},"end":{"line":170,"column":79}},"88":{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},"89":{"start":{"line":173,"column":12},"end":{"line":173,"column":87}},"90":{"start":{"line":176,"column":4},"end":{"line":186,"column":5}},"91":{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},"92":{"start":{"line":178,"column":12},"end":{"line":178,"column":74}},"93":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"94":{"start":{"line":181,"column":12},"end":{"line":181,"column":81}},"95":{"start":{"line":183,"column":8},"end":{"line":185,"column":9}},"96":{"start":{"line":184,"column":12},"end":{"line":184,"column":40}},"97":{"start":{"line":187,"column":4},"end":{"line":189,"column":5}},"98":{"start":{"line":188,"column":8},"end":{"line":188,"column":83}},"99":{"start":{"line":191,"column":0},"end":{"line":191,"column":44}},"100":{"start":{"line":193,"column":31},"end":{"line":193,"column":50}},"101":{"start":{"line":194,"column":29},"end":{"line":194,"column":46}},"102":{"start":{"line":195,"column":21},"end":{"line":195,"column":110}},"103":{"start":{"line":196,"column":4},"end":{"line":207,"column":5}},"104":{"start":{"line":197,"column":8},"end":{"line":197,"column":42}},"105":{"start":{"line":199,"column":9},"end":{"line":207,"column":5}},"106":{"start":{"line":200,"column":8},"end":{"line":200,"column":42}},"107":{"start":{"line":202,"column":9},"end":{"line":207,"column":5}},"108":{"start":{"line":203,"column":8},"end":{"line":203,"column":44}},"109":{"start":{"line":206,"column":8},"end":{"line":206,"column":31}},"110":{"start":{"line":209,"column":0},"end":{"line":209,"column":38}},"111":{"start":{"line":211,"column":4},"end":{"line":216,"column":5}},"112":{"start":{"line":212,"column":22},"end":{"line":212,"column":38}},"113":{"start":{"line":213,"column":8},"end":{"line":215,"column":9}},"114":{"start":{"line":214,"column":12},"end":{"line":214,"column":72}},"115":{"start":{"line":217,"column":4},"end":{"line":217,"column":16}},"116":{"start":{"line":219,"column":0},"end":{"line":219,"column":42}},"117":{"start":{"line":220,"column":19},"end":{"line":242,"column":1}},"118":{"start":{"line":244,"column":18},"end":{"line":244,"column":39}},"119":{"start":{"line":245,"column":20},"end":{"line":245,"column":34}},"120":{"start":{"line":246,"column":20},"end":{"line":246,"column":35}},"121":{"start":{"line":247,"column":18},"end":{"line":247,"column":31}},"122":{"start":{"line":248,"column":4},"end":{"line":261,"column":5}},"123":{"start":{"line":249,"column":8},"end":{"line":260,"column":9}},"124":{"start":{"line":250,"column":12},"end":{"line":252,"column":13}},"125":{"start":{"line":251,"column":16},"end":{"line":251,"column":60}},"126":{"start":{"line":253,"column":26},"end":{"line":253,"column":37}},"127":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"128":{"start":{"line":255,"column":16},"end":{"line":255,"column":133}},"129":{"start":{"line":258,"column":13},"end":{"line":260,"column":9}},"130":{"start":{"line":259,"column":12},"end":{"line":259,"column":78}},"131":{"start":{"line":262,"column":19},"end":{"line":262,"column":21}},"132":{"start":{"line":263,"column":4},"end":{"line":271,"column":7}},"133":{"start":{"line":264,"column":24},"end":{"line":264,"column":26}},"134":{"start":{"line":265,"column":8},"end":{"line":269,"column":11}},"135":{"start":{"line":266,"column":24},"end":{"line":266,"column":123}},"136":{"start":{"line":267,"column":26},"end":{"line":267,"column":42}},"137":{"start":{"line":268,"column":12},"end":{"line":268,"column":33}},"138":{"start":{"line":270,"column":8},"end":{"line":270,"column":29}},"139":{"start":{"line":272,"column":4},"end":{"line":272,"column":37}},"140":{"start":{"line":274,"column":0},"end":{"line":274,"column":36}},"141":{"start":{"line":276,"column":4},"end":{"line":298,"column":5}},"142":{"start":{"line":277,"column":8},"end":{"line":277,"column":22}},"143":{"start":{"line":279,"column":9},"end":{"line":298,"column":5}},"144":{"start":{"line":280,"column":8},"end":{"line":282,"column":11}},"145":{"start":{"line":281,"column":12},"end":{"line":281,"column":48}},"146":{"start":{"line":284,"column":9},"end":{"line":298,"column":5}},"147":{"start":{"line":285,"column":8},"end":{"line":287,"column":9}},"148":{"start":{"line":286,"column":12},"end":{"line":286,"column":67}},"149":{"start":{"line":288,"column":8},"end":{"line":297,"column":11}},"150":{"start":{"line":289,"column":12},"end":{"line":296,"column":13}},"151":{"start":{"line":290,"column":16},"end":{"line":295,"column":17}},"152":{"start":{"line":291,"column":20},"end":{"line":291,"column":57}},"153":{"start":{"line":293,"column":21},"end":{"line":295,"column":17}},"154":{"start":{"line":294,"column":20},"end":{"line":294,"column":57}},"155":{"start":{"line":299,"column":4},"end":{"line":299,"column":48}}},"fnMap":{"0":{"name":"IsQueryValid","decl":{"start":{"line":11,"column":9},"end":{"line":11,"column":21}},"loc":{"start":{"line":11,"column":30},"end":{"line":35,"column":1}},"line":11},"1":{"name":"IsQueryValidpart2","decl":{"start":{"line":37,"column":9},"end":{"line":37,"column":26}},"loc":{"start":{"line":37,"column":35},"end":{"line":53,"column":1}},"line":37},"2":{"name":"ParseQuery","decl":{"start":{"line":55,"column":9},"end":{"line":55,"column":19}},"loc":{"start":{"line":55,"column":42},"end":{"line":77,"column":1}},"line":55},"3":{"name":"ParseQuerypart2","decl":{"start":{"line":79,"column":9},"end":{"line":79,"column":24}},"loc":{"start":{"line":79,"column":47},"end":{"line":102,"column":1}},"line":79},"4":{"name":"GetOptions","decl":{"start":{"line":104,"column":9},"end":{"line":104,"column":19}},"loc":{"start":{"line":104,"column":27},"end":{"line":140,"column":1}},"line":104},"5":{"name":"(anonymous_5)","decl":{"start":{"line":108,"column":13},"end":{"line":108,"column":14}},"loc":{"start":{"line":108,"column":25},"end":{"line":112,"column":5}},"line":108},"6":{"name":"(anonymous_6)","decl":{"start":{"line":113,"column":16},"end":{"line":113,"column":17}},"loc":{"start":{"line":113,"column":26},"end":{"line":113,"column":44}},"line":113},"7":{"name":"(anonymous_7)","decl":{"start":{"line":114,"column":25},"end":{"line":114,"column":26}},"loc":{"start":{"line":114,"column":34},"end":{"line":114,"column":54}},"line":114},"8":{"name":"(anonymous_8)","decl":{"start":{"line":117,"column":37},"end":{"line":117,"column":38}},"loc":{"start":{"line":117,"column":49},"end":{"line":124,"column":5}},"line":117},"9":{"name":"IsValidKeyNumber","decl":{"start":{"line":157,"column":9},"end":{"line":157,"column":25}},"loc":{"start":{"line":157,"column":60},"end":{"line":190,"column":1}},"line":157},"10":{"name":"wildcardcheck","decl":{"start":{"line":192,"column":9},"end":{"line":192,"column":22}},"loc":{"start":{"line":192,"column":37},"end":{"line":208,"column":1}},"line":192},"11":{"name":"IsWildcardValid","decl":{"start":{"line":210,"column":9},"end":{"line":210,"column":24}},"loc":{"start":{"line":210,"column":30},"end":{"line":218,"column":1}},"line":210},"12":{"name":"ApplyOptions","decl":{"start":{"line":243,"column":9},"end":{"line":243,"column":21}},"loc":{"start":{"line":243,"column":40},"end":{"line":273,"column":1}},"line":243},"13":{"name":"(anonymous_13)","decl":{"start":{"line":263,"column":21},"end":{"line":263,"column":22}},"loc":{"start":{"line":263,"column":34},"end":{"line":271,"column":5}},"line":263},"14":{"name":"(anonymous_14)","decl":{"start":{"line":265,"column":24},"end":{"line":265,"column":25}},"loc":{"start":{"line":265,"column":37},"end":{"line":269,"column":9}},"line":265},"15":{"name":"ApplyOrder","decl":{"start":{"line":275,"column":9},"end":{"line":275,"column":19}},"loc":{"start":{"line":275,"column":35},"end":{"line":300,"column":1}},"line":275},"16":{"name":"(anonymous_16)","decl":{"start":{"line":280,"column":27},"end":{"line":280,"column":28}},"loc":{"start":{"line":280,"column":37},"end":{"line":282,"column":9}},"line":280},"17":{"name":"(anonymous_17)","decl":{"start":{"line":288,"column":27},"end":{"line":288,"column":28}},"loc":{"start":{"line":288,"column":37},"end":{"line":297,"column":9}},"line":288}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{"line":13,"column":4},"end":{"line":15,"column":5}}],"line":13},"1":{"loc":{"start":{"line":13,"column":8},"end":{"line":13,"column":74}},"type":"binary-expr","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":33}},{"start":{"line":13,"column":37},"end":{"line":13,"column":51}},{"start":{"line":13,"column":55},"end":{"line":13,"column":74}}],"line":13},"2":{"loc":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},{"start":{"line":16,"column":4},"end":{"line":18,"column":5}}],"line":16},"3":{"loc":{"start":{"line":16,"column":8},"end":{"line":16,"column":129}},"type":"binary-expr","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":67}},{"start":{"line":16,"column":71},"end":{"line":16,"column":129}}],"line":16},"4":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"5":{"loc":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},{"start":{"line":24,"column":4},"end":{"line":26,"column":5}}],"line":24},"6":{"loc":{"start":{"line":24,"column":8},"end":{"line":24,"column":92}},"type":"binary-expr","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":39}},{"start":{"line":24,"column":43},"end":{"line":24,"column":63}},{"start":{"line":24,"column":67},"end":{"line":24,"column":92}}],"line":24},"7":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{"line":27,"column":4},"end":{"line":29,"column":5}}],"line":27},"8":{"loc":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},{"start":{"line":30,"column":4},"end":{"line":32,"column":5}}],"line":30},"9":{"loc":{"start":{"line":30,"column":8},"end":{"line":30,"column":98}},"type":"binary-expr","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":41}},{"start":{"line":30,"column":45},"end":{"line":30,"column":67}},{"start":{"line":30,"column":71},"end":{"line":30,"column":98}}],"line":30},"10":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{"line":39,"column":4},"end":{"line":41,"column":5}}],"line":39},"11":{"loc":{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},{"start":{"line":42,"column":4},"end":{"line":46,"column":5}}],"line":42},"12":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":43}},"type":"binary-expr","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":49}},{"start":{"line":43,"column":8},"end":{"line":43,"column":38}},{"start":{"line":44,"column":8},"end":{"line":44,"column":43}}],"line":42},"13":{"loc":{"start":{"line":47,"column":4},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":52,"column":5}},{"start":{"line":47,"column":4},"end":{"line":52,"column":5}}],"line":47},"14":{"loc":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},{"start":{"line":48,"column":8},"end":{"line":51,"column":9}}],"line":48},"15":{"loc":{"start":{"line":48,"column":12},"end":{"line":49,"column":88}},"type":"binary-expr","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":53}},{"start":{"line":49,"column":12},"end":{"line":49,"column":88}}],"line":48},"16":{"loc":{"start":{"line":58,"column":4},"end":{"line":75,"column":5}},"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":75,"column":5}},{"start":{"line":58,"column":4},"end":{"line":75,"column":5}}],"line":58},"17":{"loc":{"start":{"line":59,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":73,"column":9}},{"start":{"line":59,"column":8},"end":{"line":73,"column":9}}],"line":59},"18":{"loc":{"start":{"line":66,"column":13},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":66,"column":13},"end":{"line":73,"column":9}},{"start":{"line":66,"column":13},"end":{"line":73,"column":9}}],"line":66},"19":{"loc":{"start":{"line":84,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":100,"column":5}},{"start":{"line":84,"column":4},"end":{"line":100,"column":5}}],"line":84},"20":{"loc":{"start":{"line":92,"column":9},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":92,"column":9},"end":{"line":100,"column":5}},{"start":{"line":92,"column":9},"end":{"line":100,"column":5}}],"line":92},"21":{"loc":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},{"start":{"line":109,"column":8},"end":{"line":111,"column":9}}],"line":109},"22":{"loc":{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},{"start":{"line":114,"column":4},"end":{"line":116,"column":5}}],"line":114},"23":{"loc":{"start":{"line":118,"column":8},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":123,"column":9}},{"start":{"line":118,"column":8},"end":{"line":123,"column":9}}],"line":118},"24":{"loc":{"start":{"line":125,"column":4},"end":{"line":138,"column":5}},"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":138,"column":5}},{"start":{"line":125,"column":4},"end":{"line":138,"column":5}}],"line":125},"25":{"loc":{"start":{"line":130,"column":9},"end":{"line":138,"column":5}},"type":"if","locations":[{"start":{"line":130,"column":9},"end":{"line":138,"column":5}},{"start":{"line":130,"column":9},"end":{"line":138,"column":5}}],"line":130},"26":{"loc":{"start":{"line":130,"column":13},"end":{"line":130,"column":67}},"type":"binary-expr","locations":[{"start":{"line":130,"column":13},"end":{"line":130,"column":38}},{"start":{"line":130,"column":42},"end":{"line":130,"column":67}}],"line":130},"27":{"loc":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},{"start":{"line":131,"column":8},"end":{"line":133,"column":9}}],"line":131},"28":{"loc":{"start":{"line":131,"column":12},"end":{"line":131,"column":65}},"type":"binary-expr","locations":[{"start":{"line":131,"column":12},"end":{"line":131,"column":37}},{"start":{"line":131,"column":41},"end":{"line":131,"column":65}}],"line":131},"29":{"loc":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},{"start":{"line":158,"column":4},"end":{"line":160,"column":5}}],"line":158},"30":{"loc":{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},{"start":{"line":164,"column":4},"end":{"line":166,"column":5}}],"line":164},"31":{"loc":{"start":{"line":168,"column":4},"end":{"line":175,"column":5}},"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":175,"column":5}},{"start":{"line":168,"column":4},"end":{"line":175,"column":5}}],"line":168},"32":{"loc":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},{"start":{"line":169,"column":8},"end":{"line":171,"column":9}}],"line":169},"33":{"loc":{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":174,"column":9}},{"start":{"line":172,"column":8},"end":{"line":174,"column":9}}],"line":172},"34":{"loc":{"start":{"line":172,"column":12},"end":{"line":172,"column":71}},"type":"binary-expr","locations":[{"start":{"line":172,"column":12},"end":{"line":172,"column":37}},{"start":{"line":172,"column":41},"end":{"line":172,"column":71}}],"line":172},"35":{"loc":{"start":{"line":176,"column":4},"end":{"line":186,"column":5}},"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":186,"column":5}},{"start":{"line":176,"column":4},"end":{"line":186,"column":5}}],"line":176},"36":{"loc":{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},{"start":{"line":177,"column":8},"end":{"line":179,"column":9}}],"line":177},"37":{"loc":{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},"type":"if","locations":[{"start":{"line":180,"column":8},"end":{"line":182,"column":9}},{"start":{"line":180,"column":8},"end":{"line":182,"column":9}}],"line":180},"38":{"loc":{"start":{"line":180,"column":12},"end":{"line":180,"column":71}},"type":"binary-expr","locations":[{"start":{"line":180,"column":12},"end":{"line":180,"column":37}},{"start":{"line":180,"column":41},"end":{"line":180,"column":71}}],"line":180},"39":{"loc":{"start":{"line":183,"column":8},"end":{"line":185,"column":9}},"type":"if","locations":[{"start":{"line":183,"column":8},"end":{"line":185,"column":9}},{"start":{"line":183,"column":8},"end":{"line":185,"column":9}}],"line":183},"40":{"loc":{"start":{"line":183,"column":12},"end":{"line":183,"column":71}},"type":"binary-expr","locations":[{"start":{"line":183,"column":12},"end":{"line":183,"column":37}},{"start":{"line":183,"column":41},"end":{"line":183,"column":71}}],"line":183},"41":{"loc":{"start":{"line":187,"column":4},"end":{"line":189,"column":5}},"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":189,"column":5}},{"start":{"line":187,"column":4},"end":{"line":189,"column":5}}],"line":187},"42":{"loc":{"start":{"line":187,"column":8},"end":{"line":187,"column":64}},"type":"binary-expr","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":34}},{"start":{"line":187,"column":38},"end":{"line":187,"column":64}}],"line":187},"43":{"loc":{"start":{"line":195,"column":35},"end":{"line":195,"column":61}},"type":"cond-expr","locations":[{"start":{"line":195,"column":56},"end":{"line":195,"column":57}},{"start":{"line":195,"column":60},"end":{"line":195,"column":61}}],"line":195},"44":{"loc":{"start":{"line":195,"column":63},"end":{"line":195,"column":109}},"type":"cond-expr","locations":[{"start":{"line":195,"column":82},"end":{"line":195,"column":96}},{"start":{"line":195,"column":99},"end":{"line":195,"column":109}}],"line":195},"45":{"loc":{"start":{"line":196,"column":4},"end":{"line":207,"column":5}},"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":207,"column":5}},{"start":{"line":196,"column":4},"end":{"line":207,"column":5}}],"line":196},"46":{"loc":{"start":{"line":196,"column":8},"end":{"line":196,"column":46}},"type":"binary-expr","locations":[{"start":{"line":196,"column":8},"end":{"line":196,"column":26}},{"start":{"line":196,"column":30},"end":{"line":196,"column":46}}],"line":196},"47":{"loc":{"start":{"line":199,"column":9},"end":{"line":207,"column":5}},"type":"if","locations":[{"start":{"line":199,"column":9},"end":{"line":207,"column":5}},{"start":{"line":199,"column":9},"end":{"line":207,"column":5}}],"line":199},"48":{"loc":{"start":{"line":202,"column":9},"end":{"line":207,"column":5}},"type":"if","locations":[{"start":{"line":202,"column":9},"end":{"line":207,"column":5}},{"start":{"line":202,"column":9},"end":{"line":207,"column":5}}],"line":202},"49":{"loc":{"start":{"line":211,"column":4},"end":{"line":216,"column":5}},"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":216,"column":5}},{"start":{"line":211,"column":4},"end":{"line":216,"column":5}}],"line":211},"50":{"loc":{"start":{"line":213,"column":8},"end":{"line":215,"column":9}},"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":215,"column":9}},{"start":{"line":213,"column":8},"end":{"line":215,"column":9}}],"line":213},"51":{"loc":{"start":{"line":249,"column":8},"end":{"line":260,"column":9}},"type":"if","locations":[{"start":{"line":249,"column":8},"end":{"line":260,"column":9}},{"start":{"line":249,"column":8},"end":{"line":260,"column":9}}],"line":249},"52":{"loc":{"start":{"line":250,"column":12},"end":{"line":252,"column":13}},"type":"if","locations":[{"start":{"line":250,"column":12},"end":{"line":252,"column":13}},{"start":{"line":250,"column":12},"end":{"line":252,"column":13}}],"line":250},"53":{"loc":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"type":"if","locations":[{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},{"start":{"line":254,"column":12},"end":{"line":256,"column":13}}],"line":254},"54":{"loc":{"start":{"line":254,"column":16},"end":{"line":254,"column":81}},"type":"binary-expr","locations":[{"start":{"line":254,"column":16},"end":{"line":254,"column":36}},{"start":{"line":254,"column":40},"end":{"line":254,"column":81}}],"line":254},"55":{"loc":{"start":{"line":258,"column":13},"end":{"line":260,"column":9}},"type":"if","locations":[{"start":{"line":258,"column":13},"end":{"line":260,"column":9}},{"start":{"line":258,"column":13},"end":{"line":260,"column":9}}],"line":258},"56":{"loc":{"start":{"line":266,"column":24},"end":{"line":266,"column":123}},"type":"cond-expr","locations":[{"start":{"line":266,"column":72},"end":{"line":266,"column":113}},{"start":{"line":266,"column":116},"end":{"line":266,"column":123}}],"line":266},"57":{"loc":{"start":{"line":276,"column":4},"end":{"line":298,"column":5}},"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":298,"column":5}},{"start":{"line":276,"column":4},"end":{"line":298,"column":5}}],"line":276},"58":{"loc":{"start":{"line":279,"column":9},"end":{"line":298,"column":5}},"type":"if","locations":[{"start":{"line":279,"column":9},"end":{"line":298,"column":5}},{"start":{"line":279,"column":9},"end":{"line":298,"column":5}}],"line":279},"59":{"loc":{"start":{"line":281,"column":19},"end":{"line":281,"column":47}},"type":"cond-expr","locations":[{"start":{"line":281,"column":41},"end":{"line":281,"column":42}},{"start":{"line":281,"column":45},"end":{"line":281,"column":47}}],"line":281},"60":{"loc":{"start":{"line":284,"column":9},"end":{"line":298,"column":5}},"type":"if","locations":[{"start":{"line":284,"column":9},"end":{"line":298,"column":5}},{"start":{"line":284,"column":9},"end":{"line":298,"column":5}}],"line":284},"61":{"loc":{"start":{"line":285,"column":8},"end":{"line":287,"column":9}},"type":"if","locations":[{"start":{"line":285,"column":8},"end":{"line":287,"column":9}},{"start":{"line":285,"column":8},"end":{"line":287,"column":9}}],"line":285},"62":{"loc":{"start":{"line":285,"column":12},"end":{"line":285,"column":54}},"type":"binary-expr","locations":[{"start":{"line":285,"column":12},"end":{"line":285,"column":30}},{"start":{"line":285,"column":34},"end":{"line":285,"column":54}}],"line":285},"63":{"loc":{"start":{"line":290,"column":16},"end":{"line":295,"column":17}},"type":"if","locations":[{"start":{"line":290,"column":16},"end":{"line":295,"column":17}},{"start":{"line":290,"column":16},"end":{"line":295,"column":17}}],"line":290},"64":{"loc":{"start":{"line":291,"column":27},"end":{"line":291,"column":56}},"type":"cond-expr","locations":[{"start":{"line":291,"column":50},"end":{"line":291,"column":52}},{"start":{"line":291,"column":55},"end":{"line":291,"column":56}}],"line":291},"65":{"loc":{"start":{"line":293,"column":21},"end":{"line":295,"column":17}},"type":"if","locations":[{"start":{"line":293,"column":21},"end":{"line":295,"column":17}},{"start":{"line":293,"column":21},"end":{"line":295,"column":17}}],"line":293},"66":{"loc":{"start":{"line":294,"column":27},"end":{"line":294,"column":56}},"type":"cond-expr","locations":[{"start":{"line":294,"column":50},"end":{"line":294,"column":51}},{"start":{"line":294,"column":54},"end":{"line":294,"column":56}}],"line":294}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":34,"10":34,"11":0,"12":34,"13":4,"14":30,"15":63,"16":1,"17":29,"18":0,"19":29,"20":0,"21":29,"22":0,"23":29,"24":29,"25":1,"26":29,"27":29,"28":0,"29":29,"30":0,"31":29,"32":4,"33":0,"34":1,"35":29,"36":28,"37":28,"38":1,"39":1,"40":0,"41":0,"42":0,"43":27,"44":1,"45":27,"46":27,"47":27,"48":27,"49":10,"50":6,"51":4,"52":4,"53":0,"54":1,"55":56,"56":56,"57":56,"58":175,"59":143,"60":175,"61":56,"62":143,"63":0,"64":56,"65":175,"66":143,"67":32,"68":56,"69":8,"70":48,"71":48,"72":1,"73":47,"74":0,"75":1,"76":1,"77":51,"78":0,"79":51,"80":51,"81":51,"82":51,"83":1,"84":50,"85":50,"86":29,"87":4,"88":25,"89":4,"90":42,"91":21,"92":2,"93":19,"94":2,"95":17,"96":17,"97":37,"98":0,"99":1,"100":425656,"101":425656,"102":425656,"103":425656,"104":203248,"105":222408,"106":87026,"107":135382,"108":70744,"109":64638,"110":1,"111":425673,"112":361033,"113":361033,"114":1,"115":425672,"116":1,"117":1,"118":11,"119":11,"120":11,"121":11,"122":11,"123":30,"124":18,"125":7,"126":18,"127":18,"128":1,"129":12,"130":1,"131":9,"132":9,"133":64987,"134":64987,"135":130112,"136":130112,"137":130112,"138":64987,"139":9,"140":1,"141":9,"142":4,"143":5,"144":2,"145":898838,"146":3,"147":3,"148":0,"149":3,"150":81,"151":83,"152":50,"153":33,"154":30,"155":0},"f":{"0":34,"1":29,"2":29,"3":27,"4":56,"5":175,"6":175,"7":143,"8":175,"9":51,"10":425656,"11":425673,"12":11,"13":64987,"14":130112,"15":9,"16":898838,"17":81},"b":{"0":[0,34],"1":[34,34,34],"2":[4,30],"3":[34,8],"4":[1,62],"5":[0,29],"6":[29,29,29],"7":[0,29],"8":[0,29],"9":[29,29,29],"10":[0,29],"11":[0,29],"12":[29,29,29],"13":[4,25],"14":[0,4],"15":[4,4],"16":[1,27],"17":[1,0],"18":[0,0],"19":[6,4],"20":[4,0],"21":[143,32],"22":[0,56],"23":[143,32],"24":[8,48],"25":[48,0],"26":[48,8],"27":[1,47],"28":[48,40],"29":[0,51],"30":[1,50],"31":[29,21],"32":[4,25],"33":[4,21],"34":[25,25],"35":[21,21],"36":[2,19],"37":[2,17],"38":[19,19],"39":[17,0],"40":[17,17],"41":[0,37],"42":[37,16],"43":[290274,135382],"44":[273992,151664],"45":[203248,222408],"46":[425656,290274],"47":[87026,135382],"48":[70744,64638],"49":[361033,64640],"50":[1,361032],"51":[18,12],"52":[7,11],"53":[1,17],"54":[18,12],"55":[1,11],"56":[129969,143],"57":[4,5],"58":[2,3],"59":[428183,470655],"60":[3,0],"61":[0,3],"62":[3,3],"63":[50,33],"64":[50,0],"65":[30,3],"66":[30,0]},"inputSourceMap":{"version":3,"file":"/Users/BillyOrr/Desktop/project_team117/src/models/Query.ts","sources":["/Users/BillyOrr/Desktop/project_team117/src/models/Query.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError, InsightResult } from \"../controller/IInsightFacade\";\nimport { DATASETID } from \"../controller/InsightFacade\";\nimport { GetCalFilter } from \"./Filter\";\n//import { Section } from \"./Sections\";\nimport { Query, Options, Comparator, MkeyNumber, SkeyString, ParsedQuery } from \"./QueryInterfaces\";\nimport { applyKeys } from \"./Transformation\";\n\nexport const querystructure = [\"WHERE\", \"OPTIONS\"];\nexport const transtructure = [\"WHERE\", \"OPTIONS\", \"TRANSFORMATIONS\"];\nexport const optionstructure = [\"COLUMNS\", \"ORDER\"];\n\n//QUERY VALIDATION FORMAT, other details will be checked later\nexport function IsQueryValid(uquery: unknown): boolean {\n\tconst query = uquery as Query;\n\t//check the QUERY level of ENBF\n\tif (typeof query !== \"object\" || query === null || query === undefined) {\n\t\tthrow new InsightError(\"invalid query\");\n\t}\n\tif (Object.keys(query).length !== querystructure.length && Object.keys(query).length !== transtructure.length) {\n\t\t//console.log(Object.keys(query));\n\t\tthrow new InsightError(\"INVALID STRUCTURE\");\n\t}\n\t// Ensure that the top-level keys are all uppercase\n\tfor (const key of Object.keys(query)) {\n\t\tif (!transtructure.includes(key)) {\n\t\t\tthrow new InsightError(`Unexpected key: ${key}. Expected keys: WHERE, OPTIONS, TRANSFORMATIONS.`);\n\t\t}\n\t}\n\n\tif (typeof query.WHERE !== \"object\" || query.WHERE === null || query.WHERE === undefined) {\n\t\tthrow new InsightError(\"WHERE is invalid\");\n\t}\n\n\tif (Object.keys(query.WHERE).length > 1) {\n\t\tthrow new InsightError(\"more than one filter in WHERE\");\n\t}\n\n\tif (typeof query.OPTIONS !== \"object\" || query.OPTIONS === null || query.OPTIONS === undefined) {\n\t\tthrow new InsightError(\"OPTIONS is invalid\");\n\t}\n\n\tIsQueryValidpart2(uquery);\n\n\t//Object.keys of string[] will print the list so we dont check\n\n\treturn true; //either return true or throw error\n}\n\nexport function IsQueryValidpart2(uquery: unknown): void {\n\tconst query = uquery as Query;\n\tif (Object.keys(query.OPTIONS).length > optionstructure.length) {\n\t\tthrow new InsightError(\"more than two components in OPTIONS\");\n\t}\n\n\tif (\n\t\ttypeof query.OPTIONS.COLUMNS !== \"object\" ||\n\t\tquery.OPTIONS.COLUMNS === null ||\n\t\tquery.OPTIONS.COLUMNS === undefined\n\t) {\n\t\t// typeof string[] is object\n\t\tthrow new InsightError(\"COLUMN is invalid\");\n\t}\n\n\tif (query.TRANSFORMATIONS !== undefined) {\n\t\tif (\n\t\t\ttypeof query.TRANSFORMATIONS !== \"object\" ||\n\t\t\tObject.keys(query.TRANSFORMATIONS).length !== optionstructure.length\n\t\t) {\n\t\t\tthrow new InsightError(\"Transformation is invalid\");\n\t\t}\n\t}\n}\n\nexport function ParseQuery(query: Query, dataset: any[], kind: string): ParsedQuery {\n\tconst options = GetOptions(query);\n\tconst transformation = query.TRANSFORMATIONS;\n\n\tif (Object.keys(query.WHERE).length === 0) {\n\t\tif (transformation === undefined) {\n\t\t\treturn {\n\t\t\t\tkind: kind,\n\t\t\t\tdataset: dataset,\n\t\t\t\toptions: options,\n\t\t\t};\n\t\t} else if (typeof transformation === \"object\") {\n\t\t\treturn {\n\t\t\t\tkind: kind,\n\t\t\t\tdataset: dataset,\n\t\t\t\toptions: options,\n\t\t\t\ttransformation: transformation,\n\t\t\t};\n\t\t}\n\t\tthrow new InsightError(\"Transformation is invalid\");\n\t}\n\treturn ParseQuerypart2(query, dataset, kind);\n}\n\nexport function ParseQuerypart2(query: Query, dataset: any[], kind: string): ParsedQuery {\n\tconst options = GetOptions(query);\n\tconst datasetid = query.OPTIONS.COLUMNS[0].split(\"_\")[0];\n\tconst transformation = query.TRANSFORMATIONS;\n\tconst filter = GetCalFilter(query.WHERE, dataset, datasetid);\n\tif (transformation === undefined) {\n\t\treturn {\n\t\t\tkind: kind,\n\t\t\tdataset: dataset,\n\t\t\tfilter: filter,\n\t\t\toptions: options,\n\t\t};\n\t} else if (typeof transformation === \"object\") {\n\t\treturn {\n\t\t\tkind: kind,\n\t\t\tdataset: dataset,\n\t\t\toptions: options,\n\t\t\tfilter: filter,\n\t\t\ttransformation: transformation,\n\t\t};\n\t}\n\tthrow new InsightError(\"Transformation is invalid\");\n}\n\n//GET OPTIONS OBJECT FOR PARSED QUERY AND VALIDATION\n//!!!!!!!!!! NEED ORDER FIX\nfunction GetOptions(query: Query): Options {\n\tconst columns: string[] = query.OPTIONS.COLUMNS;\n\tconst order = query.OPTIONS.ORDER; // string or object\n\n\tconst idstrings: any[] = columns\n\t\t.map((string) => {\n\t\t\tif (string.includes(\"_\")) {\n\t\t\t\treturn string.split(\"_\")[0];\n\t\t\t}\n\t\t})\n\t\t.filter((item): item is string => item !== undefined); //list of idstring\n\n\tif (!idstrings.every((str) => str === idstrings[0])) {\n\t\tthrow new InsightError(\"idstring are not all same\");\n\t}\n\n\tconst fieldstrings: any[] = columns.map((string) => {\n\t\tif (string.includes(\"_\")) {\n\t\t\treturn string.split(\"_\")[1];\n\t\t} else {\n\t\t\treturn string;\n\t\t}\n\t}); //list of key\n\n\tif (order === undefined) {\n\t\treturn {\n\t\t\tCOLUMNS: fieldstrings,\n\t\t};\n\t} else if (typeof order === \"string\" || typeof order === \"object\") {\n\t\tif (typeof order === \"string\" && !columns.includes(order)) {\n\t\t\t//order key not in column check\n\t\t\tthrow new InsightError(\"order not in column\");\n\t\t}\n\t\treturn {\n\t\t\tCOLUMNS: fieldstrings,\n\t\t\tORDER: order,\n\t\t};\n\t}\n\tthrow new InsightError(\"order invalid\");\n}\n\nconst mfields = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\", \"lat\", \"lon\", \"seats\"];\nconst sfields = [\n\t\"dept\",\n\t\"id\",\n\t\"instructor\",\n\t\"title\",\n\t\"uuid\",\n\t\"fullname\",\n\t\"shortname\",\n\t\"numRows\",\n\t\"name\",\n\t\"address\",\n\t\"type\",\n\t\"furniture\",\n\t\"href\",\n];\n\nexport function IsValidKeyNumber(keynumber: MkeyNumber | SkeyString, comparator: Comparator, datasetid: string): void {\n\t//keynumber validation\n\tif (Object.keys(keynumber).length !== 1) {\n\t\tthrow new InsightError(\"invalid filter m/skey field\");\n\t}\n\tconst mskey = Object.keys(keynumber)[0]; //mkey or skey\n\tconst keycontent = keynumber[mskey]; // number or input string\n\tconst idstring = mskey.split(\"_\")[0]; //idstring aka dataset id\n\tif (idstring !== datasetid) {\n\t\tthrow new InsightError(\"invalid dataset id\");\n\t}\n\tconst msfield = mskey.split(\"_\")[1]; // mfield or sfield\n\n\tif ([\"LT\", \"GT\", \"EQ\"].includes(comparator)) {\n\t\tif (!mfields.includes(msfield)) {\n\t\t\tthrow new InsightError(\"invalid key in LT GT EQ\");\n\t\t}\n\n\t\tif (mfields.includes(msfield) && typeof keycontent !== \"number\") {\n\t\t\tthrow new InsightError(\"invalid key content in LT GT EQ\");\n\t\t}\n\t}\n\n\tif (comparator === \"IS\") {\n\t\tif (!sfields.includes(msfield)) {\n\t\t\tthrow new InsightError(\"invalid key in IS \");\n\t\t}\n\n\t\tif (sfields.includes(msfield) && typeof keycontent !== \"string\") {\n\t\t\tthrow new InsightError(\"invalid key content in IS\");\n\t\t}\n\n\t\tif (sfields.includes(msfield) && typeof keycontent === \"string\") {\n\t\t\tIsWildcardValid(keycontent);\n\t\t}\n\t}\n\n\tif (!mfields.includes(msfield) && !sfields.includes(msfield)) {\n\t\tthrow new InsightError(\"invalid key in comparator block\");\n\t}\n}\n\nexport function wildcardcheck(val: string, content: string): boolean {\n\t// IsWildcardValid should have been called before this function\n\tconst startsWithWildcard = val.startsWith(\"*\");\n\tconst endsWithWildcard = val.endsWith(\"*\");\n\tconst innerVal = val.substring(startsWithWildcard ? 1 : 0, endsWithWildcard ? val.length - 1 : val.length);\n\n\tif (startsWithWildcard && endsWithWildcard) {\n\t\t// Contains\n\t\treturn content.includes(innerVal);\n\t} else if (startsWithWildcard) {\n\t\t// Ends with\n\t\treturn content.endsWith(innerVal);\n\t} else if (endsWithWildcard) {\n\t\t// Starts with\n\t\treturn content.startsWith(innerVal);\n\t} else {\n\t\t// Exact match\n\t\treturn content === val;\n\t}\n}\n\nexport function IsWildcardValid(val: string): boolean {\n\tif (val.includes(\"*\")) {\n\t\tconst inner = val.slice(1, -1);\n\t\tif (inner.includes(\"*\")) {\n\t\t\tthrow new InsightError(\"Invalid wildcard\");\n\t\t}\n\t}\n\treturn true;\n}\nconst validfield = [\n\t\"avg\",\n\t\"pass\",\n\t\"fail\",\n\t\"audit\",\n\t\"year\",\n\t\"dept\",\n\t\"id\",\n\t\"instructor\",\n\t\"title\",\n\t\"uuid\",\n\t\"lat\",\n\t\"lon\",\n\t\"seats\",\n\t\"fullname\",\n\t\"shortname\",\n\t\"numRows\",\n\t\"name\",\n\t\"address\",\n\t\"type\",\n\t\"furniture\",\n\t\"href\",\n];\n\nexport function ApplyOptions(pquery: ParsedQuery, sections: any[]): InsightResult[] {\n\tconst trans = pquery.transformation;\n\tconst options = pquery.options;\n\tconst columns: string[] = options.COLUMNS; // list of field strings only\n\tconst order = options.ORDER;\n\tfor (let str of columns) {\n\t\tif (trans !== undefined) {\n\t\t\tif (!applyKeys.includes(str)) {\n\t\t\t\tstr = DATASETID + \"_\" + str;\n\t\t\t}\n\t\t\tconst group = trans.GROUP;\n\t\t\t//console.log(group);\n\t\t\tif (!group.includes(str) && !applyKeys.includes(str)) {\n\t\t\t\tthrow new InsightError(\"Keys in COLUMNS must be in GROUP or APPLY when TRANSFORMATIONS is present\");\n\t\t\t}\n\t\t} else if (!validfield.includes(str)) {\n\t\t\tthrow new InsightError(\"invalid key in options\");\n\t\t}\n\t}\n\tconst result: Record<string, string | number>[] = [];\n\tsections.forEach((element) => {\n\t\tconst iresult: Record<string, any> = {};\n\t\tcolumns.forEach((fstring) => {\n\t\t\tconst key = !applyKeys.includes(fstring) ? DATASETID + \"_\" + fstring : fstring;\n\t\t\tconst value = (element as any)[fstring];\n\t\t\tiresult[key] = value;\n\t\t});\n\t\tresult.push(iresult);\n\t});\n\t//ORDER\n\treturn ApplyOrder(order, result);\n}\n\nfunction ApplyOrder(order: any, result: InsightResult[]): InsightResult[] {\n\t//console.log(order);\n\t//console.log(\"BEGIN order\");\n\t//console.log(\"type of order is \" + typeof order);\n\tif (order === undefined) {\n\t\treturn result as InsightResult[];\n\t} else if (typeof order === \"string\") {\n\t\treturn result.sort((a, b): any => {\n\t\t\treturn a[order] > b[order] ? 1 : -1;\n\t\t\t// zero indicate same value so cannot just use >\n\t\t});\n\t} else if (typeof order === \"object\") {\n\t\tif (order.dir !== \"UP\" && order.dir !== \"DOWN\") {\n\t\t\tthrow new InsightError(\"INVALID DIR\");\n\t\t}\n\t\t//console.log(order);\n\t\treturn result.sort((a, b): any => {\n\t\t\tfor (const key of order.keys) {\n\t\t\t\tif (a[key] > b[key]) {\n\t\t\t\t\t//console.log(a[key] + \"_\" + b[key]);\n\t\t\t\t\treturn order.dir === \"DOWN\" ? -1 : 1;\n\t\t\t\t} else if (a[key] < b[key]) {\n\t\t\t\t\t//console.log(a[key] + \"_\" + b[key]);\n\t\t\t\t\treturn order.dir === \"DOWN\" ? 1 : -1;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\tthrow new InsightError(\"\");\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6505487ed5c2ac7484765d9f4ec473ac293f6de5","contentHash":"d694a9596d42734d709ca93b9125c1b8889414419de3d512b315b5f2953556ac"},"/Users/BillyOrr/Desktop/project_team117/src/models/Filter.ts":{"path":"/Users/BillyOrr/Desktop/project_team117/src/models/Filter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":80}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"4":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":66}},"6":{"start":{"line":10,"column":4},"end":{"line":15,"column":5}},"7":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"8":{"start":{"line":12,"column":12},"end":{"line":12,"column":85}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":68}},"10":{"start":{"line":16,"column":4},"end":{"line":21,"column":5}},"11":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"12":{"start":{"line":18,"column":12},"end":{"line":18,"column":84}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":66}},"14":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":70}},"16":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"17":{"start":{"line":26,"column":8},"end":{"line":26,"column":70}},"18":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"19":{"start":{"line":29,"column":8},"end":{"line":29,"column":70}},"20":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"21":{"start":{"line":32,"column":8},"end":{"line":32,"column":70}},"22":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"23":{"start":{"line":35,"column":8},"end":{"line":35,"column":69}},"24":{"start":{"line":37,"column":4},"end":{"line":37,"column":66}},"25":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}},"26":{"start":{"line":41,"column":24},"end":{"line":41,"column":26}},"27":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"28":{"start":{"line":43,"column":8},"end":{"line":43,"column":69}},"29":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"30":{"start":{"line":46,"column":8},"end":{"line":46,"column":62}},"31":{"start":{"line":48,"column":4},"end":{"line":51,"column":6}},"32":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"33":{"start":{"line":55,"column":8},"end":{"line":55,"column":66}},"34":{"start":{"line":57,"column":24},"end":{"line":57,"column":26}},"35":{"start":{"line":58,"column":4},"end":{"line":58,"column":63}},"36":{"start":{"line":59,"column":4},"end":{"line":62,"column":6}},"37":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"38":{"start":{"line":66,"column":8},"end":{"line":66,"column":65}},"39":{"start":{"line":68,"column":4},"end":{"line":68,"column":68}},"40":{"start":{"line":69,"column":18},"end":{"line":69,"column":43}},"41":{"start":{"line":70,"column":23},"end":{"line":70,"column":39}},"42":{"start":{"line":71,"column":20},"end":{"line":71,"column":39}},"43":{"start":{"line":72,"column":4},"end":{"line":76,"column":6}},"44":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"45":{"start":{"line":80,"column":8},"end":{"line":80,"column":35}},"46":{"start":{"line":82,"column":19},"end":{"line":82,"column":37}},"47":{"start":{"line":83,"column":4},"end":{"line":83,"column":87}},"48":{"start":{"line":83,"column":51},"end":{"line":83,"column":85}},"49":{"start":{"line":85,"column":0},"end":{"line":85,"column":34}},"50":{"start":{"line":87,"column":17},"end":{"line":87,"column":21}},"51":{"start":{"line":88,"column":23},"end":{"line":88,"column":29}},"52":{"start":{"line":89,"column":23},"end":{"line":89,"column":29}},"53":{"start":{"line":90,"column":23},"end":{"line":90,"column":40}},"54":{"start":{"line":91,"column":4},"end":{"line":119,"column":5}},"55":{"start":{"line":92,"column":8},"end":{"line":92,"column":22}},"56":{"start":{"line":93,"column":8},"end":{"line":93,"column":110}},"57":{"start":{"line":93,"column":53},"end":{"line":93,"column":107}},"58":{"start":{"line":94,"column":8},"end":{"line":94,"column":22}},"59":{"start":{"line":96,"column":9},"end":{"line":119,"column":5}},"60":{"start":{"line":97,"column":8},"end":{"line":97,"column":23}},"61":{"start":{"line":98,"column":8},"end":{"line":98,"column":110}},"62":{"start":{"line":98,"column":53},"end":{"line":98,"column":107}},"63":{"start":{"line":99,"column":8},"end":{"line":99,"column":22}},"64":{"start":{"line":101,"column":9},"end":{"line":119,"column":5}},"65":{"start":{"line":102,"column":8},"end":{"line":102,"column":70}},"66":{"start":{"line":104,"column":9},"end":{"line":119,"column":5}},"67":{"start":{"line":105,"column":8},"end":{"line":105,"column":56}},"68":{"start":{"line":107,"column":9},"end":{"line":119,"column":5}},"69":{"start":{"line":108,"column":8},"end":{"line":108,"column":56}},"70":{"start":{"line":110,"column":9},"end":{"line":119,"column":5}},"71":{"start":{"line":111,"column":8},"end":{"line":111,"column":58}},"72":{"start":{"line":113,"column":9},"end":{"line":119,"column":5}},"73":{"start":{"line":114,"column":26},"end":{"line":114,"column":51}},"74":{"start":{"line":115,"column":24},"end":{"line":115,"column":47}},"75":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"76":{"start":{"line":117,"column":12},"end":{"line":117,"column":66}},"77":{"start":{"line":120,"column":4},"end":{"line":120,"column":66}},"78":{"start":{"line":122,"column":0},"end":{"line":122,"column":46}}},"fnMap":{"0":{"name":"GetCalFilter","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":50},"end":{"line":38,"column":1}},"line":6},"1":{"name":"GetLCalfilter","decl":{"start":{"line":40,"column":9},"end":{"line":40,"column":22}},"loc":{"start":{"line":40,"column":63},"end":{"line":52,"column":1}},"line":40},"2":{"name":"NGetLCalfilter","decl":{"start":{"line":53,"column":9},"end":{"line":53,"column":23}},"loc":{"start":{"line":53,"column":64},"end":{"line":63,"column":1}},"line":53},"3":{"name":"GetFinalCalfilter","decl":{"start":{"line":64,"column":9},"end":{"line":64,"column":26}},"loc":{"start":{"line":64,"column":70},"end":{"line":77,"column":1}},"line":64},"4":{"name":"ApplyFilter","decl":{"start":{"line":78,"column":9},"end":{"line":78,"column":20}},"loc":{"start":{"line":78,"column":34},"end":{"line":84,"column":1}},"line":78},"5":{"name":"(anonymous_5)","decl":{"start":{"line":83,"column":38},"end":{"line":83,"column":39}},"loc":{"start":{"line":83,"column":51},"end":{"line":83,"column":85}},"line":83},"6":{"name":"FilterCalculation","decl":{"start":{"line":86,"column":9},"end":{"line":86,"column":26}},"loc":{"start":{"line":86,"column":44},"end":{"line":121,"column":1}},"line":86},"7":{"name":"(anonymous_7)","decl":{"start":{"line":93,"column":39},"end":{"line":93,"column":40}},"loc":{"start":{"line":93,"column":53},"end":{"line":93,"column":107}},"line":93},"8":{"name":"(anonymous_8)","decl":{"start":{"line":98,"column":39},"end":{"line":98,"column":40}},"loc":{"start":{"line":98,"column":53},"end":{"line":98,"column":107}},"line":98}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},{"start":{"line":7,"column":4},"end":{"line":9,"column":5}}],"line":7},"1":{"loc":{"start":{"line":10,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":15,"column":5}},{"start":{"line":10,"column":4},"end":{"line":15,"column":5}}],"line":10},"2":{"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":55}},"type":"binary-expr","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":27}},{"start":{"line":10,"column":31},"end":{"line":10,"column":55}}],"line":10},"3":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11},"4":{"loc":{"start":{"line":11,"column":12},"end":{"line":11,"column":65}},"type":"binary-expr","locations":[{"start":{"line":11,"column":12},"end":{"line":11,"column":38}},{"start":{"line":11,"column":42},"end":{"line":11,"column":65}}],"line":11},"5":{"loc":{"start":{"line":16,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":21,"column":5}},{"start":{"line":16,"column":4},"end":{"line":21,"column":5}}],"line":16},"6":{"loc":{"start":{"line":16,"column":8},"end":{"line":16,"column":53}},"type":"binary-expr","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":26}},{"start":{"line":16,"column":30},"end":{"line":16,"column":53}}],"line":16},"7":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}],"line":17},"8":{"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":63}},"type":"binary-expr","locations":[{"start":{"line":17,"column":12},"end":{"line":17,"column":37}},{"start":{"line":17,"column":41},"end":{"line":17,"column":63}}],"line":17},"9":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{"line":22,"column":4},"end":{"line":24,"column":5}}],"line":22},"10":{"loc":{"start":{"line":22,"column":8},"end":{"line":22,"column":53}},"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":26}},{"start":{"line":22,"column":30},"end":{"line":22,"column":53}}],"line":22},"11":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{"line":25,"column":4},"end":{"line":27,"column":5}}],"line":25},"12":{"loc":{"start":{"line":25,"column":8},"end":{"line":25,"column":53}},"type":"binary-expr","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":26}},{"start":{"line":25,"column":30},"end":{"line":25,"column":53}}],"line":25},"13":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"14":{"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":53}},"type":"binary-expr","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":26}},{"start":{"line":28,"column":30},"end":{"line":28,"column":53}}],"line":28},"15":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{"line":31,"column":4},"end":{"line":33,"column":5}}],"line":31},"16":{"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":53}},"type":"binary-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":26}},{"start":{"line":31,"column":30},"end":{"line":31,"column":53}}],"line":31},"17":{"loc":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},{"start":{"line":34,"column":4},"end":{"line":36,"column":5}}],"line":34},"18":{"loc":{"start":{"line":34,"column":8},"end":{"line":34,"column":55}},"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":27}},{"start":{"line":34,"column":31},"end":{"line":34,"column":55}}],"line":34},"19":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{"line":42,"column":4},"end":{"line":44,"column":5}}],"line":42},"20":{"loc":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},{"start":{"line":54,"column":4},"end":{"line":56,"column":5}}],"line":54},"21":{"loc":{"start":{"line":54,"column":8},"end":{"line":54,"column":47}},"type":"binary-expr","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":23}},{"start":{"line":54,"column":27},"end":{"line":54,"column":47}}],"line":54},"22":{"loc":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},{"start":{"line":65,"column":4},"end":{"line":67,"column":5}}],"line":65},"23":{"loc":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},{"start":{"line":79,"column":4},"end":{"line":81,"column":5}}],"line":79},"24":{"loc":{"start":{"line":91,"column":4},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":119,"column":5}},{"start":{"line":91,"column":4},"end":{"line":119,"column":5}}],"line":91},"25":{"loc":{"start":{"line":93,"column":62},"end":{"line":93,"column":107}},"type":"binary-expr","locations":[{"start":{"line":93,"column":62},"end":{"line":93,"column":68}},{"start":{"line":93,"column":72},"end":{"line":93,"column":107}}],"line":93},"26":{"loc":{"start":{"line":96,"column":9},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":9},"end":{"line":119,"column":5}},{"start":{"line":96,"column":9},"end":{"line":119,"column":5}}],"line":96},"27":{"loc":{"start":{"line":98,"column":62},"end":{"line":98,"column":107}},"type":"binary-expr","locations":[{"start":{"line":98,"column":62},"end":{"line":98,"column":68}},{"start":{"line":98,"column":72},"end":{"line":98,"column":107}}],"line":98},"28":{"loc":{"start":{"line":101,"column":9},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":9},"end":{"line":119,"column":5}},{"start":{"line":101,"column":9},"end":{"line":119,"column":5}}],"line":101},"29":{"loc":{"start":{"line":104,"column":9},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":9},"end":{"line":119,"column":5}},{"start":{"line":104,"column":9},"end":{"line":119,"column":5}}],"line":104},"30":{"loc":{"start":{"line":107,"column":9},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":107,"column":9},"end":{"line":119,"column":5}},{"start":{"line":107,"column":9},"end":{"line":119,"column":5}}],"line":107},"31":{"loc":{"start":{"line":110,"column":9},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":9},"end":{"line":119,"column":5}},{"start":{"line":110,"column":9},"end":{"line":119,"column":5}}],"line":110},"32":{"loc":{"start":{"line":113,"column":9},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":9},"end":{"line":119,"column":5}},{"start":{"line":113,"column":9},"end":{"line":119,"column":5}}],"line":113},"33":{"loc":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},{"start":{"line":116,"column":8},"end":{"line":118,"column":9}}],"line":116}},"s":{"0":1,"1":1,"2":1,"3":1,"4":103,"5":0,"6":103,"7":25,"8":0,"9":25,"10":78,"11":22,"12":1,"13":21,"14":56,"15":1,"16":55,"17":24,"18":31,"19":5,"20":26,"21":21,"22":5,"23":3,"24":2,"25":1,"26":46,"27":46,"28":0,"29":46,"30":73,"31":16,"32":3,"33":0,"34":3,"35":3,"36":3,"37":51,"38":0,"39":51,"40":37,"41":37,"42":37,"43":37,"44":11,"45":1,"46":10,"47":10,"48":389124,"49":1,"50":2046150,"51":2046150,"52":2046150,"53":2046150,"54":2046150,"55":389124,"56":389124,"57":1101308,"58":389124,"59":1657026,"60":387672,"61":387672,"62":839956,"63":387672,"64":1269354,"65":67525,"66":1201829,"67":64611,"68":1137218,"69":388772,"70":748446,"71":322790,"72":425656,"73":425656,"74":425656,"75":425656,"76":425656,"77":0,"78":1},"f":{"0":103,"1":46,"2":3,"3":51,"4":11,"5":389124,"6":2046150,"7":1101308,"8":839956},"b":{"0":[0,103],"1":[25,78],"2":[103,103],"3":[0,25],"4":[25,25],"5":[22,56],"6":[78,78],"7":[1,21],"8":[22,21],"9":[1,55],"10":[56,56],"11":[24,31],"12":[55,55],"13":[5,26],"14":[31,31],"15":[21,5],"16":[26,26],"17":[3,2],"18":[5,5],"19":[0,46],"20":[0,3],"21":[3,3],"22":[0,51],"23":[1,10],"24":[389124,1657026],"25":[1101308,755965],"26":[387672,1269354],"27":[839956,833536],"28":[67525,1201829],"29":[64611,1137218],"30":[388772,748446],"31":[322790,425656],"32":[425656,0],"33":[425656,0]},"inputSourceMap":{"version":3,"file":"/Users/BillyOrr/Desktop/project_team117/src/models/Filter.ts","sources":["/Users/BillyOrr/Desktop/project_team117/src/models/Filter.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError } from \"../controller/IInsightFacade\";\nimport { IsValidKeyNumber, IsWildcardValid, wildcardcheck } from \"./Query\";\nimport {\n\tFilter,\n\tCalFilter,\n\tComparator,\n\tLCalFilter,\n\tMkeyNumber,\n\tSkeyString,\n\tFinalCalFilter,\n\tParsedQuery,\n} from \"./QueryInterfaces\";\n\n//GET CALFILTER OBJECT FOR PARSED QUERY AND VALIDATION USING RECURSION OVER FILTER\n\nexport function GetCalFilter(filter: Filter, dataset: any[], datasetid: string): CalFilter {\n\tif (Object.keys(filter).length !== 1) {\n\t\t//there should be only one filter object\n\t\tthrow new InsightError(\"invalid filter\");\n\t}\n\tif (filter.AND !== null && filter.AND !== undefined) {\n\t\tif (!Array.isArray(filter.AND) || (filter.AND as Filter[]).length === 0) {\n\t\t\tthrow new InsightError(\"AND must be a non-empty array\");\n\t\t}\n\t\treturn GetLCalfilter(filter.AND, dataset, \"AND\", datasetid);\n\t}\n\tif (filter.OR !== null && filter.OR !== undefined) {\n\t\tif (!Array.isArray(filter.OR) || (filter.OR as Filter[]).length === 0) {\n\t\t\tthrow new InsightError(\"OR must be a non-empty array\");\n\t\t}\n\t\treturn GetLCalfilter(filter.OR, dataset, \"OR\", datasetid);\n\t}\n\tif (filter.LT !== null && filter.LT !== undefined) {\n\t\treturn GetFinalCalfilter(filter.LT, dataset, \"LT\", datasetid);\n\t}\n\tif (filter.GT !== null && filter.GT !== undefined) {\n\t\treturn GetFinalCalfilter(filter.GT, dataset, \"GT\", datasetid);\n\t}\n\tif (filter.EQ !== null && filter.EQ !== undefined) {\n\t\treturn GetFinalCalfilter(filter.EQ, dataset, \"EQ\", datasetid);\n\t}\n\tif (filter.IS !== null && filter.IS !== undefined) {\n\t\treturn GetFinalCalfilter(filter.IS, dataset, \"IS\", datasetid);\n\t}\n\tif (filter.NOT !== null && filter.NOT !== undefined) {\n\t\treturn NGetLCalfilter(filter.NOT, dataset, \"NOT\", datasetid);\n\t}\n\tthrow new InsightError(\"comparator invalid\"); // this line can only be reached by invalid comparator\n}\nfunction GetLCalfilter(filter: Filter[], dataset: any[], comparator: Comparator, datasetid: string): LCalFilter {\n\tconst lcomparator: CalFilter[] = [];\n\tif (filter.length === 0) {\n\t\tthrow new InsightError(\"empty filter list\");\n\t}\n\tfor (const f of filter) {\n\t\tlcomparator.push(GetCalFilter(f, dataset, datasetid));\n\t}\n\n\treturn {\n\t\tcomparator: comparator,\n\t\tlcomparator: lcomparator,\n\t};\n}\nfunction NGetLCalfilter(filter: Filter, dataset: any[], comparator: Comparator, datasetid: string): LCalFilter {\n\t// FOR NEGATION CUZ THE SINGLE FILTER AND TYPE UNION SUCKS\n\tif (filter === null || filter === undefined) {\n\t\tthrow new InsightError(\"invalid filter\");\n\t}\n\tconst lcomparator: CalFilter[] = [];\n\tlcomparator.push(GetCalFilter(filter, dataset, datasetid));\n\treturn {\n\t\tcomparator: comparator,\n\t\tlcomparator: lcomparator,\n\t};\n}\nfunction GetFinalCalfilter(\n\tkeynumber: MkeyNumber | SkeyString,\n\tdataset: any[],\n\tcomparator: Comparator,\n\tdatasetid: string\n): FinalCalFilter {\n\tif (dataset === undefined) {\n\t\tthrow new InsightError(\"empty dataset\");\n\t}\n\tIsValidKeyNumber(keynumber, comparator, datasetid);\n\tconst mskey = Object.keys(keynumber)[0]; //mkey or skey\n\tconst keycontent = keynumber[mskey]; // number or input string\n\tconst msfield = mskey.split(\"_\")[1]; // mfield or sfield\n\treturn {\n\t\tcomparator: comparator,\n\t\tkey: msfield,\n\t\tval: keycontent, //change\n\t};\n}\n\nexport function ApplyFilter(parsedquery: ParsedQuery): any[] {\n\tif (parsedquery.filter === undefined) {\n\t\treturn parsedquery.dataset;\n\t}\n\tconst filter = parsedquery.filter;\n\treturn parsedquery.dataset.filter((element) => FilterCalculation(element, filter)); // every section have to pass the filter to be added (filtered)\n}\n\nexport function FilterCalculation(section: any, filter: CalFilter): boolean {\n\tlet result = true;\n\tconst lcalfilter = filter as LCalFilter;\n\tconst fcalfilter = filter as FinalCalFilter;\n\tconst comparator: string = filter.comparator;\n\n\tif (comparator === \"AND\") {\n\t\tresult = true;\n\t\tlcalfilter.lcomparator.forEach((element) => (result = result && FilterCalculation(section, element)));\n\t\treturn result;\n\t} else if (comparator === \"OR\") {\n\t\tresult = false;\n\t\tlcalfilter.lcomparator.forEach((element) => (result = result || FilterCalculation(section, element)));\n\t\treturn result;\n\t} else if (comparator === \"NOT\") {\n\t\treturn !FilterCalculation(section, lcalfilter.lcomparator[0]); // not only have 1 filter\n\t} else if (comparator === \"LT\") {\n\t\treturn section[fcalfilter.key] < fcalfilter.val;\n\t} else if (comparator === \"GT\") {\n\t\treturn section[fcalfilter.key] > fcalfilter.val;\n\t} else if (comparator === \"EQ\") {\n\t\treturn section[fcalfilter.key] === fcalfilter.val;\n\t} else if (comparator === \"IS\") {\n\t\tconst valstring = fcalfilter.val.toString();\n\t\tconst content = section[fcalfilter.key];\n\t\t// 'IsWildcardValid' will throw an error if the wildcard pattern is invalid\n\t\tif (IsWildcardValid(valstring)) {\n\t\t\treturn wildcardcheck(valstring, content);\n\t\t}\n\t}\n\tthrow new InsightError(\"invalid comparator\");\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"92020db81c2dc56c93da4a941e295011f7190010","contentHash":"d7658737a6bf36cd8ac6b963b6f36aacfff750d05d7d034e4f3e797c293d9cd8"},"/Users/BillyOrr/Desktop/project_team117/src/models/Transformation.ts":{"path":"/Users/BillyOrr/Desktop/project_team117/src/models/Transformation.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":214}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":64}},"6":{"start":{"line":9,"column":24},"end":{"line":9,"column":62}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":23}},"8":{"start":{"line":11,"column":20},"end":{"line":11,"column":57}},"9":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":20}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":33}},"12":{"start":{"line":17,"column":18},"end":{"line":17,"column":41}},"13":{"start":{"line":18,"column":20},"end":{"line":18,"column":44}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":19}},"15":{"start":{"line":21,"column":0},"end":{"line":21,"column":50}},"16":{"start":{"line":23,"column":27},"end":{"line":23,"column":47}},"17":{"start":{"line":24,"column":4},"end":{"line":53,"column":5}},"18":{"start":{"line":25,"column":8},"end":{"line":47,"column":9}},"19":{"start":{"line":26,"column":12},"end":{"line":26,"column":89}},"20":{"start":{"line":28,"column":13},"end":{"line":47,"column":9}},"21":{"start":{"line":29,"column":12},"end":{"line":29,"column":67}},"22":{"start":{"line":31,"column":13},"end":{"line":47,"column":9}},"23":{"start":{"line":32,"column":12},"end":{"line":46,"column":13}},"24":{"start":{"line":33,"column":33},"end":{"line":33,"column":60}},"25":{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},"26":{"start":{"line":35,"column":20},"end":{"line":35,"column":92}},"27":{"start":{"line":37,"column":35},"end":{"line":37,"column":72}},"28":{"start":{"line":38,"column":28},"end":{"line":38,"column":67}},"29":{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},"30":{"start":{"line":40,"column":20},"end":{"line":40,"column":83}},"31":{"start":{"line":42,"column":16},"end":{"line":44,"column":17}},"32":{"start":{"line":43,"column":20},"end":{"line":43,"column":95}},"33":{"start":{"line":45,"column":16},"end":{"line":45,"column":49}},"34":{"start":{"line":48,"column":8},"end":{"line":52,"column":9}},"35":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"36":{"start":{"line":50,"column":16},"end":{"line":50,"column":77}},"37":{"start":{"line":55,"column":0},"end":{"line":55,"column":54}},"38":{"start":{"line":57,"column":18},"end":{"line":57,"column":44}},"39":{"start":{"line":58,"column":19},"end":{"line":58,"column":21}},"40":{"start":{"line":59,"column":4},"end":{"line":65,"column":5}},"41":{"start":{"line":60,"column":20},"end":{"line":60,"column":72}},"42":{"start":{"line":60,"column":40},"end":{"line":60,"column":64}},"43":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"44":{"start":{"line":62,"column":12},"end":{"line":62,"column":29}},"45":{"start":{"line":64,"column":8},"end":{"line":64,"column":31}},"46":{"start":{"line":66,"column":4},"end":{"line":66,"column":18}},"47":{"start":{"line":68,"column":0},"end":{"line":68,"column":32}},"48":{"start":{"line":70,"column":18},"end":{"line":70,"column":44}},"49":{"start":{"line":71,"column":19},"end":{"line":71,"column":21}},"50":{"start":{"line":72,"column":4},"end":{"line":81,"column":5}},"51":{"start":{"line":73,"column":8},"end":{"line":76,"column":9}},"52":{"start":{"line":74,"column":27},"end":{"line":74,"column":42}},"53":{"start":{"line":75,"column":12},"end":{"line":75,"column":32}},"54":{"start":{"line":77,"column":8},"end":{"line":77,"column":22}},"55":{"start":{"line":80,"column":8},"end":{"line":80,"column":41}},"56":{"start":{"line":83,"column":0},"end":{"line":83,"column":32}},"57":{"start":{"line":85,"column":19},"end":{"line":85,"column":21}},"58":{"start":{"line":86,"column":18},"end":{"line":86,"column":44}},"59":{"start":{"line":87,"column":4},"end":{"line":117,"column":5}},"60":{"start":{"line":88,"column":8},"end":{"line":115,"column":9}},"61":{"start":{"line":89,"column":27},"end":{"line":89,"column":42}},"62":{"start":{"line":90,"column":12},"end":{"line":113,"column":13}},"63":{"start":{"line":90,"column":25},"end":{"line":90,"column":26}},"64":{"start":{"line":91,"column":33},"end":{"line":91,"column":53}},"65":{"start":{"line":92,"column":36},"end":{"line":92,"column":44}},"66":{"start":{"line":93,"column":35},"end":{"line":93,"column":72}},"67":{"start":{"line":94,"column":33},"end":{"line":94,"column":86}},"68":{"start":{"line":95,"column":16},"end":{"line":112,"column":17}},"69":{"start":{"line":96,"column":20},"end":{"line":96,"column":72}},"70":{"start":{"line":98,"column":21},"end":{"line":112,"column":17}},"71":{"start":{"line":99,"column":20},"end":{"line":99,"column":72}},"72":{"start":{"line":101,"column":21},"end":{"line":112,"column":17}},"73":{"start":{"line":102,"column":20},"end":{"line":102,"column":72}},"74":{"start":{"line":104,"column":21},"end":{"line":112,"column":17}},"75":{"start":{"line":105,"column":20},"end":{"line":105,"column":74}},"76":{"start":{"line":107,"column":21},"end":{"line":112,"column":17}},"77":{"start":{"line":108,"column":20},"end":{"line":108,"column":72}},"78":{"start":{"line":111,"column":20},"end":{"line":111,"column":91}},"79":{"start":{"line":114,"column":12},"end":{"line":114,"column":32}},"80":{"start":{"line":116,"column":8},"end":{"line":116,"column":22}},"81":{"start":{"line":120,"column":20},"end":{"line":122,"column":6}},"82":{"start":{"line":121,"column":8},"end":{"line":121,"column":67}},"83":{"start":{"line":123,"column":4},"end":{"line":123,"column":29}},"84":{"start":{"line":126,"column":20},"end":{"line":128,"column":6}},"85":{"start":{"line":127,"column":8},"end":{"line":127,"column":67}},"86":{"start":{"line":129,"column":4},"end":{"line":129,"column":29}},"87":{"start":{"line":131,"column":20},"end":{"line":131,"column":21}},"88":{"start":{"line":133,"column":20},"end":{"line":133,"column":31}},"89":{"start":{"line":134,"column":16},"end":{"line":134,"column":43}},"90":{"start":{"line":135,"column":4},"end":{"line":138,"column":5}},"91":{"start":{"line":136,"column":22},"end":{"line":136,"column":64}},"92":{"start":{"line":137,"column":8},"end":{"line":137,"column":55}},"93":{"start":{"line":139,"column":16},"end":{"line":139,"column":42}},"94":{"start":{"line":140,"column":4},"end":{"line":140,"column":44}},"95":{"start":{"line":143,"column":16},"end":{"line":143,"column":43}},"96":{"start":{"line":144,"column":4},"end":{"line":147,"column":5}},"97":{"start":{"line":145,"column":22},"end":{"line":145,"column":64}},"98":{"start":{"line":146,"column":8},"end":{"line":146,"column":55}},"99":{"start":{"line":148,"column":4},"end":{"line":148,"column":46}},"100":{"start":{"line":151,"column":19},"end":{"line":151,"column":21}},"101":{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},"102":{"start":{"line":153,"column":8},"end":{"line":153,"column":38}},"103":{"start":{"line":155,"column":4},"end":{"line":155,"column":32}},"104":{"start":{"line":158,"column":26},"end":{"line":158,"column":112}},"105":{"start":{"line":159,"column":23},"end":{"line":171,"column":5}},"106":{"start":{"line":172,"column":17},"end":{"line":172,"column":37}},"107":{"start":{"line":173,"column":4},"end":{"line":178,"column":5}},"108":{"start":{"line":174,"column":8},"end":{"line":174,"column":45}},"109":{"start":{"line":176,"column":9},"end":{"line":178,"column":5}},"110":{"start":{"line":177,"column":8},"end":{"line":177,"column":42}},"111":{"start":{"line":179,"column":4},"end":{"line":179,"column":68}},"112":{"start":{"line":181,"column":0},"end":{"line":181,"column":44}},"113":{"start":{"line":183,"column":27},"end":{"line":183,"column":67}},"114":{"start":{"line":184,"column":24},"end":{"line":184,"column":47}},"115":{"start":{"line":185,"column":17},"end":{"line":185,"column":37}},"116":{"start":{"line":186,"column":4},"end":{"line":191,"column":5}},"117":{"start":{"line":187,"column":8},"end":{"line":187,"column":46}},"118":{"start":{"line":189,"column":9},"end":{"line":191,"column":5}},"119":{"start":{"line":190,"column":8},"end":{"line":190,"column":43}},"120":{"start":{"line":192,"column":4},"end":{"line":192,"column":68}},"121":{"start":{"line":194,"column":0},"end":{"line":194,"column":46}},"122":{"start":{"line":196,"column":27},"end":{"line":196,"column":73}},"123":{"start":{"line":197,"column":24},"end":{"line":197,"column":108}},"124":{"start":{"line":198,"column":17},"end":{"line":198,"column":37}},"125":{"start":{"line":199,"column":4},"end":{"line":204,"column":5}},"126":{"start":{"line":200,"column":8},"end":{"line":200,"column":46}},"127":{"start":{"line":202,"column":9},"end":{"line":204,"column":5}},"128":{"start":{"line":203,"column":8},"end":{"line":203,"column":43}},"129":{"start":{"line":205,"column":4},"end":{"line":205,"column":68}},"130":{"start":{"line":207,"column":0},"end":{"line":207,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"ApplyTransformation","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":28}},"loc":{"start":{"line":12,"column":42},"end":{"line":20,"column":1}},"line":12},"2":{"name":"IsTransformationValid","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":30}},"loc":{"start":{"line":22,"column":38},"end":{"line":54,"column":1}},"line":22},"3":{"name":"ApplyGroup","decl":{"start":{"line":56,"column":9},"end":{"line":56,"column":19}},"loc":{"start":{"line":56,"column":34},"end":{"line":67,"column":1}},"line":56},"4":{"name":"(anonymous_4)","decl":{"start":{"line":60,"column":30},"end":{"line":60,"column":31}},"loc":{"start":{"line":60,"column":40},"end":{"line":60,"column":64}},"line":60},"5":{"name":"ApplyApply","decl":{"start":{"line":69,"column":9},"end":{"line":69,"column":19}},"loc":{"start":{"line":69,"column":36},"end":{"line":82,"column":1}},"line":69},"6":{"name":"ApplyLong","decl":{"start":{"line":84,"column":9},"end":{"line":84,"column":18}},"loc":{"start":{"line":84,"column":35},"end":{"line":118,"column":1}},"line":84},"7":{"name":"applyMax","decl":{"start":{"line":119,"column":9},"end":{"line":119,"column":17}},"loc":{"start":{"line":119,"column":34},"end":{"line":124,"column":1}},"line":119},"8":{"name":"(anonymous_8)","decl":{"start":{"line":120,"column":32},"end":{"line":120,"column":33}},"loc":{"start":{"line":120,"column":51},"end":{"line":122,"column":5}},"line":120},"9":{"name":"applyMin","decl":{"start":{"line":125,"column":9},"end":{"line":125,"column":17}},"loc":{"start":{"line":125,"column":34},"end":{"line":130,"column":1}},"line":125},"10":{"name":"(anonymous_10)","decl":{"start":{"line":126,"column":32},"end":{"line":126,"column":33}},"loc":{"start":{"line":126,"column":51},"end":{"line":128,"column":5}},"line":126},"11":{"name":"applyAvg","decl":{"start":{"line":132,"column":9},"end":{"line":132,"column":17}},"loc":{"start":{"line":132,"column":34},"end":{"line":141,"column":1}},"line":132},"12":{"name":"applySum","decl":{"start":{"line":142,"column":9},"end":{"line":142,"column":17}},"loc":{"start":{"line":142,"column":34},"end":{"line":149,"column":1}},"line":142},"13":{"name":"applyCount","decl":{"start":{"line":150,"column":9},"end":{"line":150,"column":19}},"loc":{"start":{"line":150,"column":36},"end":{"line":156,"column":1}},"line":150},"14":{"name":"IsFieldValidKind","decl":{"start":{"line":157,"column":9},"end":{"line":157,"column":25}},"loc":{"start":{"line":157,"column":33},"end":{"line":180,"column":1}},"line":157},"15":{"name":"IsMFieldValidKind","decl":{"start":{"line":182,"column":9},"end":{"line":182,"column":26}},"loc":{"start":{"line":182,"column":34},"end":{"line":193,"column":1}},"line":182},"16":{"name":"IsSFieldValidKind","decl":{"start":{"line":195,"column":9},"end":{"line":195,"column":26}},"loc":{"start":{"line":195,"column":34},"end":{"line":206,"column":1}},"line":195}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{"line":13,"column":4},"end":{"line":15,"column":5}}],"line":13},"4":{"loc":{"start":{"line":24,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":53,"column":5}},{"start":{"line":24,"column":4},"end":{"line":53,"column":5}}],"line":24},"5":{"loc":{"start":{"line":25,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":47,"column":9}},{"start":{"line":25,"column":8},"end":{"line":47,"column":9}}],"line":25},"6":{"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":74}},"type":"binary-expr","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":41}},{"start":{"line":25,"column":45},"end":{"line":25,"column":74}}],"line":25},"7":{"loc":{"start":{"line":28,"column":13},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":13},"end":{"line":47,"column":9}},{"start":{"line":28,"column":13},"end":{"line":47,"column":9}}],"line":28},"8":{"loc":{"start":{"line":31,"column":13},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":13},"end":{"line":47,"column":9}},{"start":{"line":31,"column":13},"end":{"line":47,"column":9}}],"line":31},"9":{"loc":{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},"type":"if","locations":[{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},{"start":{"line":34,"column":16},"end":{"line":36,"column":17}}],"line":34},"10":{"loc":{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},"type":"if","locations":[{"start":{"line":39,"column":16},"end":{"line":41,"column":17}},{"start":{"line":39,"column":16},"end":{"line":41,"column":17}}],"line":39},"11":{"loc":{"start":{"line":42,"column":16},"end":{"line":44,"column":17}},"type":"if","locations":[{"start":{"line":42,"column":16},"end":{"line":44,"column":17}},{"start":{"line":42,"column":16},"end":{"line":44,"column":17}}],"line":42},"12":{"loc":{"start":{"line":42,"column":20},"end":{"line":42,"column":107}},"type":"binary-expr","locations":[{"start":{"line":42,"column":20},"end":{"line":42,"column":67}},{"start":{"line":42,"column":71},"end":{"line":42,"column":107}}],"line":42},"13":{"loc":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},{"start":{"line":49,"column":12},"end":{"line":51,"column":13}}],"line":49},"14":{"loc":{"start":{"line":49,"column":16},"end":{"line":49,"column":74}},"type":"binary-expr","locations":[{"start":{"line":49,"column":16},"end":{"line":49,"column":34}},{"start":{"line":49,"column":38},"end":{"line":49,"column":74}}],"line":49},"15":{"loc":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},{"start":{"line":61,"column":8},"end":{"line":63,"column":9}}],"line":61},"16":{"loc":{"start":{"line":72,"column":4},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":81,"column":5}},{"start":{"line":72,"column":4},"end":{"line":81,"column":5}}],"line":72},"17":{"loc":{"start":{"line":87,"column":4},"end":{"line":117,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":117,"column":5}},{"start":{"line":87,"column":4},"end":{"line":117,"column":5}}],"line":87},"18":{"loc":{"start":{"line":95,"column":16},"end":{"line":112,"column":17}},"type":"if","locations":[{"start":{"line":95,"column":16},"end":{"line":112,"column":17}},{"start":{"line":95,"column":16},"end":{"line":112,"column":17}}],"line":95},"19":{"loc":{"start":{"line":95,"column":20},"end":{"line":95,"column":71}},"type":"binary-expr","locations":[{"start":{"line":95,"column":20},"end":{"line":95,"column":40}},{"start":{"line":95,"column":44},"end":{"line":95,"column":71}}],"line":95},"20":{"loc":{"start":{"line":98,"column":21},"end":{"line":112,"column":17}},"type":"if","locations":[{"start":{"line":98,"column":21},"end":{"line":112,"column":17}},{"start":{"line":98,"column":21},"end":{"line":112,"column":17}}],"line":98},"21":{"loc":{"start":{"line":98,"column":25},"end":{"line":98,"column":76}},"type":"binary-expr","locations":[{"start":{"line":98,"column":25},"end":{"line":98,"column":45}},{"start":{"line":98,"column":49},"end":{"line":98,"column":76}}],"line":98},"22":{"loc":{"start":{"line":101,"column":21},"end":{"line":112,"column":17}},"type":"if","locations":[{"start":{"line":101,"column":21},"end":{"line":112,"column":17}},{"start":{"line":101,"column":21},"end":{"line":112,"column":17}}],"line":101},"23":{"loc":{"start":{"line":101,"column":25},"end":{"line":101,"column":76}},"type":"binary-expr","locations":[{"start":{"line":101,"column":25},"end":{"line":101,"column":45}},{"start":{"line":101,"column":49},"end":{"line":101,"column":76}}],"line":101},"24":{"loc":{"start":{"line":104,"column":21},"end":{"line":112,"column":17}},"type":"if","locations":[{"start":{"line":104,"column":21},"end":{"line":112,"column":17}},{"start":{"line":104,"column":21},"end":{"line":112,"column":17}}],"line":104},"25":{"loc":{"start":{"line":104,"column":25},"end":{"line":104,"column":77}},"type":"binary-expr","locations":[{"start":{"line":104,"column":25},"end":{"line":104,"column":47}},{"start":{"line":104,"column":51},"end":{"line":104,"column":77}}],"line":104},"26":{"loc":{"start":{"line":107,"column":21},"end":{"line":112,"column":17}},"type":"if","locations":[{"start":{"line":107,"column":21},"end":{"line":112,"column":17}},{"start":{"line":107,"column":21},"end":{"line":112,"column":17}}],"line":107},"27":{"loc":{"start":{"line":107,"column":25},"end":{"line":107,"column":76}},"type":"binary-expr","locations":[{"start":{"line":107,"column":25},"end":{"line":107,"column":45}},{"start":{"line":107,"column":49},"end":{"line":107,"column":76}}],"line":107},"28":{"loc":{"start":{"line":121,"column":15},"end":{"line":121,"column":66}},"type":"cond-expr","locations":[{"start":{"line":121,"column":52},"end":{"line":121,"column":59}},{"start":{"line":121,"column":62},"end":{"line":121,"column":66}}],"line":121},"29":{"loc":{"start":{"line":127,"column":15},"end":{"line":127,"column":66}},"type":"cond-expr","locations":[{"start":{"line":127,"column":52},"end":{"line":127,"column":59}},{"start":{"line":127,"column":62},"end":{"line":127,"column":66}}],"line":127},"30":{"loc":{"start":{"line":173,"column":4},"end":{"line":178,"column":5}},"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":178,"column":5}},{"start":{"line":173,"column":4},"end":{"line":178,"column":5}}],"line":173},"31":{"loc":{"start":{"line":176,"column":9},"end":{"line":178,"column":5}},"type":"if","locations":[{"start":{"line":176,"column":9},"end":{"line":178,"column":5}},{"start":{"line":176,"column":9},"end":{"line":178,"column":5}}],"line":176},"32":{"loc":{"start":{"line":186,"column":4},"end":{"line":191,"column":5}},"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":191,"column":5}},{"start":{"line":186,"column":4},"end":{"line":191,"column":5}}],"line":186},"33":{"loc":{"start":{"line":189,"column":9},"end":{"line":191,"column":5}},"type":"if","locations":[{"start":{"line":189,"column":9},"end":{"line":191,"column":5}},{"start":{"line":189,"column":9},"end":{"line":191,"column":5}}],"line":189},"34":{"loc":{"start":{"line":199,"column":4},"end":{"line":204,"column":5}},"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":204,"column":5}},{"start":{"line":199,"column":4},"end":{"line":204,"column":5}}],"line":199},"35":{"loc":{"start":{"line":202,"column":9},"end":{"line":204,"column":5}},"type":"if","locations":[{"start":{"line":202,"column":9},"end":{"line":204,"column":5}},{"start":{"line":202,"column":9},"end":{"line":204,"column":5}}],"line":202}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":11,"10":7,"11":4,"12":4,"13":4,"14":4,"15":1,"16":4,"17":4,"18":4,"19":0,"20":4,"21":0,"22":4,"23":4,"24":16,"25":16,"26":0,"27":16,"28":16,"29":16,"30":0,"31":16,"32":0,"33":16,"34":4,"35":7,"36":0,"37":1,"38":4,"39":4,"40":4,"41":64,"42":124,"43":64,"44":43,"45":64,"46":4,"47":1,"48":4,"49":4,"50":4,"51":0,"52":0,"53":0,"54":0,"55":4,"56":1,"57":4,"58":4,"59":4,"60":4,"61":43,"62":43,"63":43,"64":203,"65":203,"66":203,"67":203,"68":203,"69":43,"70":160,"71":40,"72":120,"73":40,"74":80,"75":40,"76":40,"77":40,"78":0,"79":43,"80":4,"81":43,"82":21,"83":43,"84":40,"85":20,"86":40,"87":1,"88":40,"89":40,"90":40,"91":60,"92":60,"93":40,"94":40,"95":40,"96":40,"97":60,"98":60,"99":40,"100":40,"101":40,"102":60,"103":40,"104":63,"105":63,"106":63,"107":63,"108":0,"109":63,"110":63,"111":0,"112":1,"113":163,"114":163,"115":163,"116":163,"117":0,"118":163,"119":163,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1},"f":{"0":1,"1":11,"2":4,"3":4,"4":124,"5":4,"6":4,"7":43,"8":21,"9":40,"10":20,"11":40,"12":40,"13":40,"14":63,"15":163,"16":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[7,4],"4":[4,0],"5":[0,4],"6":[4,4],"7":[0,4],"8":[4,0],"9":[0,16],"10":[0,16],"11":[0,16],"12":[16,16],"13":[0,7],"14":[7,7],"15":[43,21],"16":[0,4],"17":[4,0],"18":[43,160],"19":[203,43],"20":[40,120],"21":[160,40],"22":[40,80],"23":[120,40],"24":[40,40],"25":[80,40],"26":[40,0],"27":[40,40],"28":[4,17],"29":[0,20],"30":[0,63],"31":[63,0],"32":[0,163],"33":[163,0],"34":[0,0],"35":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/BillyOrr/Desktop/project_team117/src/models/Transformation.ts","sources":["/Users/BillyOrr/Desktop/project_team117/src/models/Transformation.ts"],"names":[],"mappings":"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","sourcesContent":["import Decimal from \"decimal.js\";\nimport { InsightError } from \"../controller/IInsightFacade\";\nimport { DATASETID, KIND } from \"../controller/InsightFacade\";\n//import { Section } from \"./Sections\";\n\nimport { Apply, ParsedQuery } from \"./QueryInterfaces\";\n\nexport const applyKeys: string[] = [];\nconst APPLYTOKENS = [\"MAX\", \"MIN\", \"AVG\", \"COUNT\", \"SUM\"];\n\nexport function ApplyTransformation(query: ParsedQuery, data: any[]): any[] {\n\tif (query.transformation === undefined) {\n\t\treturn data;\n\t}\n\tIsTransformationValid(query);\n\t//console.log(\"1\");\n\tconst group = ApplyGroup(query, data);\n\tconst applied = ApplyApply(query, group);\n\treturn applied;\n}\n\nexport function IsTransformationValid(query: ParsedQuery): void {\n\tconst transformation = query.transformation;\n\tif (transformation !== undefined) {\n\t\tif (transformation.GROUP === null || transformation.APPLY === null) {\n\t\t\tthrow new InsightError(\"GROUP and APPLY MUST BE PRESENTED\");\n\t\t} else if (transformation.GROUP.length === 0) {\n\t\t\tthrow new InsightError(\"EMPTY GROUP\");\n\t\t} else if (transformation.APPLY.length !== 0) {\n\t\t\t//APPLYRULE_LIST? CAN BE EMPTY\n\t\t\tfor (const applyobject of transformation.APPLY) {\n\t\t\t\t//'{' applykey ': {' APPLYTOKEN ':' KEY '} }'\n\t\t\t\tconst applykey = Object.keys(applyobject)[0]; // APPLY KEY\n\t\t\t\tif (applykey.includes(\"_\")) {\n\t\t\t\t\tthrow new InsightError(\"APPLY KEY INCLUDE UNDERSCORE\");\n\t\t\t\t}\n\t\t\t\tconst applyToken = Object.keys(applyobject[applykey])[0];\n\t\t\t\tconst KEY = Object.values(applyobject[applykey])[0];\n\t\t\t\tif (!APPLYTOKENS.includes(applyToken)) {\n\t\t\t\t\tthrow new InsightError(\"INVALID APPLY TOKEN\");\n\t\t\t\t}\n\t\t\t\tif (KEY.split(\"_\")[0] !== DATASETID || !IsFieldValidKind(KEY.split(\"_\")[1])) {\n\t\t\t\t\tthrow new InsightError(\"INVALID KEY IN APPLY KEY OBJECT\");\n\t\t\t\t}\n\t\t\t\tapplyKeys.push(applykey);\n\t\t\t}\n\t\t}\n\t\t//console.log(applyKeys);\n\t\tfor (const key of transformation.GROUP) {\n\t\t\t//KEY LIST\n\t\t\tif (!key.includes(\"_\") || !IsFieldValidKind(key.split(\"_\")[1])) {\n\t\t\t\tthrow new InsightError(\"invalid group key\");\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function ApplyGroup(query: any, datas: any[]): any {\n\tconst group = query.transformation.GROUP; // list of Gobject key\n\tconst result: Record<string, any> = {};\n\tfor (const data of datas) {\n\t\tconst key = group.map((gkey: string) => data[gkey.split(\"_\")[1]]).join(); // group by the value\n\t\tif (result[key] === undefined) {\n\t\t\tresult[key] = [];\n\t\t}\n\t\tresult[key].push(data);\n\t}\n\t//console.log(result);\n\treturn result; //gobject\n}\n\nexport function ApplyApply(query: any, Gobject: any): any[] {\n\t//console.log(\"begin apply\");\n\tconst apply = query.transformation.APPLY;\n\tconst result: any = [];\n\tif (apply.length === 0) {\n\t\t// apply is empty, column keys all in group keys\n\t\tfor (const key in Gobject) {\n\t\t\tconst single = Gobject[key][0];\n\t\t\tresult.push(single);\n\t\t}\n\t\treturn result;\n\t} else {\n\t\t//console.log(\"begin apply long\");\n\t\treturn ApplyLong(query, Gobject);\n\t}\n}\n\nfunction ApplyLong(query: any, Gobject: any): any {\n\tconst result: any = [];\n\tconst apply = query.transformation.APPLY;\n\tif (apply.length > 0) {\n\t\tfor (const key in Gobject) {\n\t\t\t// key is grouped key\n\t\t\tconst single = Gobject[key][0];\n\t\t\tfor (let i = 0; i < apply.length; i++) {\n\t\t\t\tconst applykey = applyKeys[i];\n\t\t\t\tconst applyobject: Apply = apply[i];\n\t\t\t\t//console.log(applyobject);\n\t\t\t\t//console.log(applykey);\n\t\t\t\tconst applyToken = Object.keys(applyobject[applykey])[0];\n\t\t\t\tconst fieldkey = Object.values(applyobject[applykey])[0].split(\"_\")[1]; //field name\n\t\t\t\t//console.log(applyToken + \"_\" + fieldkey);\n\t\t\t\tif (applyToken === \"MAX\" && IsMFieldValidKind(fieldkey)) {\n\t\t\t\t\tsingle[applykey] = applyMax(Gobject[key], fieldkey);\n\t\t\t\t} else if (applyToken === \"MIN\" && IsMFieldValidKind(fieldkey)) {\n\t\t\t\t\tsingle[applykey] = applyMin(Gobject[key], fieldkey);\n\t\t\t\t} else if (applyToken === \"AVG\" && IsMFieldValidKind(fieldkey)) {\n\t\t\t\t\tsingle[applykey] = applyAvg(Gobject[key], fieldkey);\n\t\t\t\t} else if (applyToken === \"COUNT\" && IsFieldValidKind(fieldkey)) {\n\t\t\t\t\tsingle[applykey] = applyCount(Gobject[key], fieldkey);\n\t\t\t\t} else if (applyToken === \"SUM\" && IsMFieldValidKind(fieldkey)) {\n\t\t\t\t\tsingle[applykey] = applySum(Gobject[key], fieldkey);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new InsightError(\"INVALID TOKEN OR FIELD NAME\");\n\t\t\t\t}\n\t\t\t\t//console.log(applyToken + \"_\" + fieldkey);\n\t\t\t}\n\t\t\tresult.push(single);\n\t\t}\n\t\treturn result;\n\t}\n\t//throw new InsightError(\"INVALID APPLY BLOCK\");\n}\n\nfunction applyMax(list: any[], fieldkey: string): number {\n\t//list is a list of section/room objects\n\tconst maxitem = list.reduce((prev, current) => {\n\t\treturn current[fieldkey] > prev[fieldkey] ? current : prev;\n\t});\n\treturn maxitem[fieldkey];\n}\n\nfunction applyMin(list: any[], fieldkey: string): number {\n\t//list is a list of section/room objects\n\tconst maxitem = list.reduce((prev, current) => {\n\t\treturn current[fieldkey] < prev[fieldkey] ? current : prev;\n\t});\n\treturn maxitem[fieldkey];\n}\n\nconst FIXEDDIGITS = 2;\n\nfunction applyAvg(list: any[], fieldkey: string): number {\n\t//list is a list of section/room objects\n\tconst numRows = list.length;\n\tlet total = new Decimal(0);\n\tfor (const object of list) {\n\t\tconst value = new Decimal(object[fieldkey]);\n\t\ttotal = Decimal.add(total, value);\n\t}\n\tconst avg = total.toNumber() / numRows;\n\n\treturn Number(avg.toFixed(FIXEDDIGITS));\n}\n\nfunction applySum(list: any[], fieldkey: string): number {\n\t//list is a list of section/room objects\n\tlet total = new Decimal(0);\n\tfor (const object of list) {\n\t\tconst value = new Decimal(object[fieldkey]);\n\t\ttotal = Decimal.add(total, value);\n\t}\n\treturn Number(total.toFixed(FIXEDDIGITS));\n}\n\nfunction applyCount(list: any[], fieldkey: string): number {\n\t//list is a list of section/room objects\n\tconst result: any = [];\n\tfor (const object of list) {\n\t\tresult.push(object[fieldkey]);\n\t}\n\treturn new Set(result).size;\n}\n\nexport function IsFieldValidKind(field: string): Boolean {\n\tconst sectionfields = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\", \"dept\", \"id\", \"instructor\", \"title\", \"uuid \"];\n\tconst roomfields = [\n\t\t\"lat\",\n\t\t\"lon\",\n\t\t\"seats\",\n\t\t\"fullname\",\n\t\t\"shortname\",\n\t\t\"numRows\",\n\t\t\"name\",\n\t\t\"address\",\n\t\t\"type\",\n\t\t\"furniture\",\n\t\t\"href\",\n\t];\n\tconst kind = KIND;\n\tif (kind === \"sections\") {\n\t\treturn sectionfields.includes(field);\n\t} else if (kind === \"rooms\") {\n\t\treturn roomfields.includes(field);\n\t}\n\tthrow new InsightError(\"INVALID DATASET KIND\");\n}\n\nexport function IsMFieldValidKind(field: string): Boolean {\n\tconst sectionMfields = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\tconst roomMfields = [\"lat\", \"lon\", \"seats\"];\n\tconst kind = KIND;\n\tif (kind === \"sections\") {\n\t\treturn sectionMfields.includes(field);\n\t} else if (kind === \"rooms\") {\n\t\treturn roomMfields.includes(field);\n\t}\n\tthrow new InsightError(\"INVALID DATASET KIND\");\n}\n\nexport function IsSFieldValidKind(field: string): Boolean {\n\tconst sectionSfields = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid \"];\n\tconst roomSfields = [\"fullname\", \"shortname\", \"numRows\", \"name\", \"address\", \"type\", \"furniture\", \"href\"];\n\tconst kind = KIND;\n\tif (kind === \"sections\") {\n\t\treturn sectionSfields.includes(field);\n\t} else if (kind === \"rooms\") {\n\t\treturn roomSfields.includes(field);\n\t}\n\tthrow new InsightError(\"INVALID DATASET KIND\");\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e2bafd4e4d2d9f3c8a90c5734db8da48c2163591","contentHash":"a32e1220c81a024e6fa56c99988409a4eda8c3440052fecba0168c495bb3ed53"},"/Users/BillyOrr/Desktop/project_team117/src/models/Sections.ts":{"path":"/Users/BillyOrr/Desktop/project_team117/src/models/Sections.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":79}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":25}},"4":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"5":{"start":{"line":19,"column":12},"end":{"line":19,"column":52}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":43}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":37}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":39}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":48}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":40}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":96}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":43}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":45}},"14":{"start":{"line":29,"column":8},"end":{"line":29,"column":45}},"15":{"start":{"line":30,"column":8},"end":{"line":30,"column":47}},"16":{"start":{"line":33,"column":31},"end":{"line":44,"column":9}},"17":{"start":{"line":45,"column":8},"end":{"line":49,"column":9}},"18":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"19":{"start":{"line":47,"column":16},"end":{"line":47,"column":29}},"20":{"start":{"line":50,"column":8},"end":{"line":50,"column":20}},"21":{"start":{"line":53,"column":0},"end":{"line":53,"column":26}},"22":{"start":{"line":55,"column":25},"end":{"line":55,"column":35}},"23":{"start":{"line":56,"column":24},"end":{"line":56,"column":26}},"24":{"start":{"line":57,"column":4},"end":{"line":61,"column":7}},"25":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"26":{"start":{"line":59,"column":12},"end":{"line":59,"column":35}},"27":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"28":{"start":{"line":63,"column":8},"end":{"line":63,"column":99}},"29":{"start":{"line":65,"column":4},"end":{"line":65,"column":23}},"30":{"start":{"line":67,"column":0},"end":{"line":67,"column":40}},"31":{"start":{"line":69,"column":28},"end":{"line":90,"column":6}},"32":{"start":{"line":70,"column":8},"end":{"line":89,"column":9}},"33":{"start":{"line":71,"column":29},"end":{"line":71,"column":53}},"34":{"start":{"line":72,"column":29},"end":{"line":72,"column":49}},"35":{"start":{"line":73,"column":35},"end":{"line":73,"column":50}},"36":{"start":{"line":74,"column":33},"end":{"line":74,"column":35}},"37":{"start":{"line":75,"column":12},"end":{"line":84,"column":13}},"38":{"start":{"line":76,"column":16},"end":{"line":83,"column":17}},"39":{"start":{"line":77,"column":20},"end":{"line":82,"column":21}},"40":{"start":{"line":78,"column":40},"end":{"line":78,"column":64}},"41":{"start":{"line":79,"column":24},"end":{"line":79,"column":51}},"42":{"start":{"line":85,"column":12},"end":{"line":85,"column":32}},"43":{"start":{"line":88,"column":12},"end":{"line":88,"column":22}},"44":{"start":{"line":91,"column":27},"end":{"line":91,"column":61}},"45":{"start":{"line":92,"column":21},"end":{"line":92,"column":42}},"46":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"47":{"start":{"line":94,"column":8},"end":{"line":94,"column":101}},"48":{"start":{"line":96,"column":4},"end":{"line":96,"column":20}},"49":{"start":{"line":98,"column":0},"end":{"line":98,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":29},"end":{"line":31,"column":5}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":36},"end":{"line":51,"column":5}},"line":32},"2":{"name":"getCourseFiles","decl":{"start":{"line":54,"column":9},"end":{"line":54,"column":23}},"loc":{"start":{"line":54,"column":29},"end":{"line":66,"column":1}},"line":54},"3":{"name":"(anonymous_3)","decl":{"start":{"line":57,"column":38},"end":{"line":57,"column":39}},"loc":{"start":{"line":57,"column":51},"end":{"line":61,"column":5}},"line":57},"4":{"name":"processCourseFiles","decl":{"start":{"line":68,"column":15},"end":{"line":68,"column":33}},"loc":{"start":{"line":68,"column":47},"end":{"line":97,"column":1}},"line":68},"5":{"name":"(anonymous_5)","decl":{"start":{"line":69,"column":44},"end":{"line":69,"column":45}},"loc":{"start":{"line":69,"column":60},"end":{"line":90,"column":5}},"line":69}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18},"1":{"loc":{"start":{"line":26,"column":20},"end":{"line":26,"column":95}},"type":"cond-expr","locations":[{"start":{"line":26,"column":56},"end":{"line":26,"column":68}},{"start":{"line":26,"column":71},"end":{"line":26,"column":95}}],"line":26},"2":{"loc":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},{"start":{"line":46,"column":12},"end":{"line":48,"column":13}}],"line":46},"3":{"loc":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},{"start":{"line":58,"column":8},"end":{"line":60,"column":9}}],"line":58},"4":{"loc":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},{"start":{"line":62,"column":4},"end":{"line":64,"column":5}}],"line":62},"5":{"loc":{"start":{"line":75,"column":12},"end":{"line":84,"column":13}},"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":84,"column":13}},{"start":{"line":75,"column":12},"end":{"line":84,"column":13}}],"line":75},"6":{"loc":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},{"start":{"line":93,"column":4},"end":{"line":95,"column":5}}],"line":93}},"s":{"0":1,"1":1,"2":1,"3":1,"4":516898,"5":1,"6":516897,"7":516897,"8":516897,"9":516897,"10":516897,"11":516897,"12":516897,"13":516897,"14":516897,"15":516897,"16":516898,"17":516898,"18":5168978,"19":1,"20":516897,"21":1,"22":16,"23":16,"24":16,"25":47557,"26":47557,"27":16,"28":3,"29":13,"30":1,"31":13,"32":47557,"33":47557,"34":47557,"35":47554,"36":47554,"37":47554,"38":47554,"39":516898,"40":516898,"41":516897,"42":47554,"43":3,"44":13,"45":13,"46":13,"47":4,"48":9,"49":1},"f":{"0":516898,"1":516898,"2":16,"3":47557,"4":13,"5":47557},"b":{"0":[1,516897],"1":[196969,319928],"2":[1,5168977],"3":[47557,0],"4":[3,13],"5":[47554,0],"6":[4,9]},"inputSourceMap":{"version":3,"file":"/Users/BillyOrr/Desktop/project_team117/src/models/Sections.ts","sources":["/Users/BillyOrr/Desktop/project_team117/src/models/Sections.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip = require(\"jszip\");\nimport { InsightError } from \"../controller/IInsightFacade\";\n\nconst OVERALL_YEAR = 1900;\n\nexport class Section {\n\tpublic readonly uuid: string; // Corresponds to \"id\" (identifier for the section)\n\tpublic readonly id: string; // Corresponds to \"Course\" (course identifier)\n\tpublic readonly title: string; // Corresponds to \"Title\" (name of the course)\n\tpublic readonly instructor: string; // Corresponds to \"Professor\" (instructor name)\n\tpublic readonly dept: string; // Corresponds to \"Subject\" (department)\n\tpublic readonly year: number; // Corresponds to \"Year\" (year of the section)\n\tpublic readonly avg: number; // Corresponds to \"Avg\" (average grade)\n\tpublic readonly pass: number; // Corresponds to \"Pass\" (number of students who passed)\n\tpublic readonly fail: number; // Corresponds to \"Fail\" (number of students who failed)\n\tpublic readonly audit: number; // Corresponds to \"Audit\" (number of students who audited)\n\t[key: string]: any;\n\n\tconstructor(sectionData: any) {\n\t\t// Validate and assign the required fields\n\t\tif (!this.isValidSectionData(sectionData)) {\n\t\t\tthrow new Error(\"Invalid section data\");\n\t\t}\n\n\t\tthis.uuid = String(sectionData.id); // Mapping \"id\" to \"uuid\"\n\t\tthis.id = sectionData.Course; // Mapping \"Course\" to \"id\"\n\t\tthis.title = sectionData.Title; // Mapping \"Title\" to \"title\"\n\t\tthis.instructor = sectionData.Professor; // Mapping \"Professor\" to \"instructor\"\n\t\tthis.dept = sectionData.Subject; // Mapping \"Subject\" to \"dept\"\n\t\t// Check if the Year is \"overall\", and replace it with OVERALL_YEAR if so\n\t\tthis.year = sectionData.Section === \"overall\" ? OVERALL_YEAR : Number(sectionData.Year);\n\t\tthis.avg = Number(sectionData.Avg); // Mapping \"Avg\" to \"avg\"\n\t\tthis.pass = Number(sectionData.Pass); // Mapping \"Pass\" to \"pass\"\n\t\tthis.fail = Number(sectionData.Fail); // Mapping \"Fail\" to \"fail\"\n\t\tthis.audit = Number(sectionData.Audit); // Mapping \"Audit\" to \"audit\"\n\t}\n\n\tprivate isValidSectionData(sectionData: any): boolean {\n\t\tconst requiredFields = [\n\t\t\t\"id\", // Corresponds to \"uuid\"\n\t\t\t\"Course\", // Corresponds to \"id\"\n\t\t\t\"Title\", // Corresponds to \"title\"\n\t\t\t\"Professor\", // Corresponds to \"instructor\"\n\t\t\t\"Subject\", // Corresponds to \"dept\"\n\t\t\t\"Year\", // Corresponds to \"year\"\n\t\t\t\"Avg\", // Corresponds to \"avg\"\n\t\t\t\"Pass\", // Corresponds to \"pass\"\n\t\t\t\"Fail\", // Corresponds to \"fail\"\n\t\t\t\"Audit\", // Corresponds to \"audit\"\n\t\t];\n\t\tfor (const field of requiredFields) {\n\t\t\tif (!(field in sectionData)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n// Helper function to get course files from the zip\nexport function getCourseFiles(zip: JSZip): JSZip.JSZipObject[] {\n\tconst courseFolder = \"courses/\";\n\tconst courseFiles: JSZip.JSZipObject[] = [];\n\n\tzip.folder(courseFolder)?.forEach((_, file) => {\n\t\tif (!file.dir) {\n\t\t\tcourseFiles.push(file);\n\t\t}\n\t});\n\n\tif (courseFiles.length === 0) {\n\t\tthrow new InsightError(\"No course files found in the dataset - Team 117\");\n\t}\n\n\treturn courseFiles;\n}\n\n// Helper function to process course files\nexport async function processCourseFiles(courseFiles: JSZip.JSZipObject[]): Promise<Section[]> {\n\tconst sectionPromises = courseFiles.map(async (file) => {\n\t\ttry {\n\t\t\tconst fileData = await file.async(\"text\");\n\t\t\tconst jsonData = JSON.parse(fileData);\n\t\t\tconst resultSections = jsonData.result;\n\t\t\tconst fileSections: Section[] = [];\n\n\t\t\tif (Array.isArray(resultSections)) {\n\t\t\t\tfor (const sectionData of resultSections) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst section = new Section(sectionData);\n\t\t\t\t\t\tfileSections.push(section);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// Skip invalid sections\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn fileSections;\n\t\t} catch {\n\t\t\t// Ignore invalid files\n\t\t\treturn [];\n\t\t}\n\t});\n\n\tconst sectionsArrays = await Promise.all(sectionPromises);\n\tconst sections = sectionsArrays.flat();\n\n\tif (sections.length === 0) {\n\t\tthrow new InsightError(\"No valid sections found in the dataset - Team 117\");\n\t}\n\n\treturn sections;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"80799292de13744c4677ad7a3aa07bf506498944","contentHash":"5674a391cedb5278e3a8a2172f1b5457f3585a2a490359c6febb5ceb8bfee746"},"/Users/BillyOrr/Desktop/project_team117/src/models/rooms/RoomParser.ts":{"path":"/Users/BillyOrr/Desktop/project_team117/src/models/rooms/RoomParser.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":57}},"26":{"start":{"line":27,"column":17},"end":{"line":27,"column":34}},"27":{"start":{"line":28,"column":16},"end":{"line":28,"column":34}},"28":{"start":{"line":29,"column":25},"end":{"line":29,"column":67}},"29":{"start":{"line":30,"column":20},"end":{"line":30,"column":49}},"30":{"start":{"line":31,"column":22},"end":{"line":31,"column":53}},"31":{"start":{"line":32,"column":13},"end":{"line":32,"column":42}},"32":{"start":{"line":34,"column":22},"end":{"line":34,"column":43}},"33":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"34":{"start":{"line":36,"column":8},"end":{"line":36,"column":95}},"35":{"start":{"line":38,"column":25},"end":{"line":38,"column":54}},"36":{"start":{"line":39,"column":21},"end":{"line":39,"column":54}},"37":{"start":{"line":40,"column":26},"end":{"line":40,"column":56}},"38":{"start":{"line":41,"column":22},"end":{"line":41,"column":24}},"39":{"start":{"line":42,"column":4},"end":{"line":48,"column":5}},"40":{"start":{"line":43,"column":31},"end":{"line":43,"column":83}},"41":{"start":{"line":44,"column":21},"end":{"line":44,"column":45}},"42":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"43":{"start":{"line":46,"column":12},"end":{"line":46,"column":33}},"44":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"45":{"start":{"line":50,"column":8},"end":{"line":50,"column":101}},"46":{"start":{"line":52,"column":4},"end":{"line":52,"column":21}},"47":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}},"48":{"start":{"line":56,"column":18},"end":{"line":56,"column":20}},"49":{"start":{"line":57,"column":29},"end":{"line":57,"column":31}},"50":{"start":{"line":58,"column":25},"end":{"line":73,"column":6}},"51":{"start":{"line":59,"column":32},"end":{"line":59,"column":56}},"52":{"start":{"line":60,"column":25},"end":{"line":60,"column":61}},"53":{"start":{"line":61,"column":29},"end":{"line":61,"column":69}},"54":{"start":{"line":62,"column":8},"end":{"line":70,"column":9}},"55":{"start":{"line":63,"column":12},"end":{"line":69,"column":13}},"56":{"start":{"line":64,"column":28},"end":{"line":64,"column":91}},"57":{"start":{"line":65,"column":16},"end":{"line":65,"column":61}},"58":{"start":{"line":68,"column":16},"end":{"line":68,"column":26}},"59":{"start":{"line":71,"column":29},"end":{"line":71,"column":67}},"60":{"start":{"line":72,"column":8},"end":{"line":72,"column":74}},"61":{"start":{"line":74,"column":20},"end":{"line":74,"column":51}},"62":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"63":{"start":{"line":76,"column":8},"end":{"line":76,"column":37}},"64":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"65":{"start":{"line":79,"column":8},"end":{"line":79,"column":98}},"66":{"start":{"line":81,"column":4},"end":{"line":81,"column":17}},"67":{"start":{"line":83,"column":0},"end":{"line":83,"column":44}},"68":{"start":{"line":85,"column":26},"end":{"line":85,"column":28}},"69":{"start":{"line":86,"column":20},"end":{"line":87,"column":102}},"70":{"start":{"line":86,"column":67},"end":{"line":87,"column":101}},"71":{"start":{"line":87,"column":35},"end":{"line":87,"column":100}},"72":{"start":{"line":88,"column":4},"end":{"line":97,"column":5}},"73":{"start":{"line":89,"column":22},"end":{"line":89,"column":88}},"74":{"start":{"line":89,"column":63},"end":{"line":89,"column":84}},"75":{"start":{"line":90,"column":8},"end":{"line":96,"column":9}},"76":{"start":{"line":91,"column":29},"end":{"line":91,"column":77}},"77":{"start":{"line":91,"column":56},"end":{"line":91,"column":76}},"78":{"start":{"line":92,"column":12},"end":{"line":95,"column":13}},"79":{"start":{"line":93,"column":34},"end":{"line":93,"column":88}},"80":{"start":{"line":94,"column":16},"end":{"line":94,"column":46}},"81":{"start":{"line":98,"column":4},"end":{"line":98,"column":25}},"82":{"start":{"line":101,"column":19},"end":{"line":101,"column":21}},"83":{"start":{"line":102,"column":22},"end":{"line":102,"column":67}},"84":{"start":{"line":103,"column":18},"end":{"line":103,"column":20}},"85":{"start":{"line":104,"column":29},"end":{"line":104,"column":187}},"86":{"start":{"line":104,"column":76},"end":{"line":104,"column":183}},"87":{"start":{"line":104,"column":130},"end":{"line":104,"column":182}},"88":{"start":{"line":105,"column":4},"end":{"line":115,"column":5}},"89":{"start":{"line":106,"column":23},"end":{"line":106,"column":104}},"90":{"start":{"line":106,"column":78},"end":{"line":106,"column":100}},"91":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"92":{"start":{"line":108,"column":12},"end":{"line":108,"column":70}},"93":{"start":{"line":110,"column":28},"end":{"line":111,"column":100}},"94":{"start":{"line":110,"column":83},"end":{"line":111,"column":96}},"95":{"start":{"line":111,"column":39},"end":{"line":111,"column":95}},"96":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"97":{"start":{"line":113,"column":12},"end":{"line":113,"column":74}},"98":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"99":{"start":{"line":117,"column":8},"end":{"line":117,"column":101}},"100":{"start":{"line":119,"column":4},"end":{"line":119,"column":44}},"101":{"start":{"line":122,"column":18},"end":{"line":122,"column":20}},"102":{"start":{"line":123,"column":22},"end":{"line":124,"column":99}},"103":{"start":{"line":123,"column":69},"end":{"line":124,"column":95}},"104":{"start":{"line":124,"column":35},"end":{"line":124,"column":94}},"105":{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},"106":{"start":{"line":126,"column":8},"end":{"line":126,"column":21}},"107":{"start":{"line":128,"column":18},"end":{"line":128,"column":95}},"108":{"start":{"line":128,"column":66},"end":{"line":128,"column":91}},"109":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"110":{"start":{"line":130,"column":8},"end":{"line":130,"column":21}},"111":{"start":{"line":132,"column":17},"end":{"line":132,"column":84}},"112":{"start":{"line":132,"column":61},"end":{"line":132,"column":83}},"113":{"start":{"line":133,"column":4},"end":{"line":138,"column":5}},"114":{"start":{"line":134,"column":21},"end":{"line":134,"column":62}},"115":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"116":{"start":{"line":136,"column":12},"end":{"line":136,"column":29}},"117":{"start":{"line":139,"column":4},"end":{"line":139,"column":17}},"118":{"start":{"line":142,"column":18},"end":{"line":142,"column":83}},"119":{"start":{"line":142,"column":60},"end":{"line":142,"column":82}},"120":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"121":{"start":{"line":144,"column":8},"end":{"line":144,"column":20}},"122":{"start":{"line":146,"column":23},"end":{"line":146,"column":47}},"123":{"start":{"line":147,"column":22},"end":{"line":147,"column":45}},"124":{"start":{"line":148,"column":21},"end":{"line":148,"column":43}},"125":{"start":{"line":149,"column":26},"end":{"line":149,"column":53}},"126":{"start":{"line":150,"column":21},"end":{"line":150,"column":43}},"127":{"start":{"line":151,"column":4},"end":{"line":170,"column":5}},"128":{"start":{"line":152,"column":25},"end":{"line":152,"column":66}},"129":{"start":{"line":153,"column":25},"end":{"line":165,"column":9}},"130":{"start":{"line":166,"column":8},"end":{"line":166,"column":42}},"131":{"start":{"line":169,"column":8},"end":{"line":169,"column":20}},"132":{"start":{"line":173,"column":4},"end":{"line":180,"column":5}},"133":{"start":{"line":174,"column":27},"end":{"line":174,"column":83}},"134":{"start":{"line":174,"column":54},"end":{"line":174,"column":75}},"135":{"start":{"line":175,"column":28},"end":{"line":175,"column":72}},"136":{"start":{"line":176,"column":8},"end":{"line":179,"column":9}},"137":{"start":{"line":177,"column":25},"end":{"line":177,"column":93}},"138":{"start":{"line":177,"column":68},"end":{"line":177,"column":89}},"139":{"start":{"line":178,"column":12},"end":{"line":178,"column":85}},"140":{"start":{"line":181,"column":4},"end":{"line":181,"column":14}},"141":{"start":{"line":184,"column":4},"end":{"line":190,"column":5}},"142":{"start":{"line":185,"column":27},"end":{"line":185,"column":83}},"143":{"start":{"line":185,"column":54},"end":{"line":185,"column":75}},"144":{"start":{"line":186,"column":28},"end":{"line":186,"column":72}},"145":{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},"146":{"start":{"line":188,"column":12},"end":{"line":188,"column":45}},"147":{"start":{"line":191,"column":4},"end":{"line":191,"column":13}},"148":{"start":{"line":194,"column":4},"end":{"line":200,"column":5}},"149":{"start":{"line":195,"column":27},"end":{"line":195,"column":83}},"150":{"start":{"line":195,"column":54},"end":{"line":195,"column":75}},"151":{"start":{"line":196,"column":28},"end":{"line":196,"column":72}},"152":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"153":{"start":{"line":198,"column":12},"end":{"line":198,"column":31}},"154":{"start":{"line":201,"column":4},"end":{"line":201,"column":14}},"155":{"start":{"line":204,"column":4},"end":{"line":210,"column":5}},"156":{"start":{"line":205,"column":27},"end":{"line":205,"column":83}},"157":{"start":{"line":205,"column":54},"end":{"line":205,"column":75}},"158":{"start":{"line":206,"column":28},"end":{"line":206,"column":72}},"159":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"160":{"start":{"line":208,"column":12},"end":{"line":208,"column":31}},"161":{"start":{"line":211,"column":4},"end":{"line":211,"column":14}},"162":{"start":{"line":214,"column":4},"end":{"line":220,"column":5}},"163":{"start":{"line":215,"column":27},"end":{"line":215,"column":83}},"164":{"start":{"line":215,"column":54},"end":{"line":215,"column":75}},"165":{"start":{"line":216,"column":8},"end":{"line":219,"column":9}},"166":{"start":{"line":217,"column":25},"end":{"line":217,"column":145}},"167":{"start":{"line":217,"column":68},"end":{"line":217,"column":89}},"168":{"start":{"line":217,"column":117},"end":{"line":217,"column":137}},"169":{"start":{"line":218,"column":12},"end":{"line":218,"column":30}},"170":{"start":{"line":221,"column":4},"end":{"line":221,"column":14}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"getRoomFiles","decl":{"start":{"line":33,"column":15},"end":{"line":33,"column":27}},"loc":{"start":{"line":33,"column":33},"end":{"line":53,"column":1}},"line":33},"7":{"name":"processRoomFiles","decl":{"start":{"line":55,"column":15},"end":{"line":55,"column":31}},"loc":{"start":{"line":55,"column":43},"end":{"line":82,"column":1}},"line":55},"8":{"name":"(anonymous_8)","decl":{"start":{"line":58,"column":39},"end":{"line":58,"column":40}},"loc":{"start":{"line":58,"column":55},"end":{"line":73,"column":5}},"line":58},"9":{"name":"extractBuildingPaths","decl":{"start":{"line":84,"column":9},"end":{"line":84,"column":29}},"loc":{"start":{"line":84,"column":40},"end":{"line":99,"column":1}},"line":84},"10":{"name":"(anonymous_10)","decl":{"start":{"line":86,"column":57},"end":{"line":86,"column":58}},"loc":{"start":{"line":86,"column":67},"end":{"line":87,"column":101}},"line":86},"11":{"name":"(anonymous_11)","decl":{"start":{"line":87,"column":25},"end":{"line":87,"column":26}},"loc":{"start":{"line":87,"column":35},"end":{"line":87,"column":100}},"line":87},"12":{"name":"(anonymous_12)","decl":{"start":{"line":89,"column":53},"end":{"line":89,"column":54}},"loc":{"start":{"line":89,"column":63},"end":{"line":89,"column":84}},"line":89},"13":{"name":"(anonymous_13)","decl":{"start":{"line":91,"column":46},"end":{"line":91,"column":47}},"loc":{"start":{"line":91,"column":56},"end":{"line":91,"column":76}},"line":91},"14":{"name":"extractBuildingInfo","decl":{"start":{"line":100,"column":9},"end":{"line":100,"column":28}},"loc":{"start":{"line":100,"column":49},"end":{"line":120,"column":1}},"line":100},"15":{"name":"(anonymous_15)","decl":{"start":{"line":104,"column":66},"end":{"line":104,"column":67}},"loc":{"start":{"line":104,"column":76},"end":{"line":104,"column":183}},"line":104},"16":{"name":"(anonymous_16)","decl":{"start":{"line":104,"column":120},"end":{"line":104,"column":121}},"loc":{"start":{"line":104,"column":130},"end":{"line":104,"column":182}},"line":104},"17":{"name":"(anonymous_17)","decl":{"start":{"line":106,"column":68},"end":{"line":106,"column":69}},"loc":{"start":{"line":106,"column":78},"end":{"line":106,"column":100}},"line":106},"18":{"name":"(anonymous_18)","decl":{"start":{"line":110,"column":73},"end":{"line":110,"column":74}},"loc":{"start":{"line":110,"column":83},"end":{"line":111,"column":96}},"line":110},"19":{"name":"(anonymous_19)","decl":{"start":{"line":111,"column":29},"end":{"line":111,"column":30}},"loc":{"start":{"line":111,"column":39},"end":{"line":111,"column":95}},"line":111},"20":{"name":"extractRoomsFromBuilding","decl":{"start":{"line":121,"column":9},"end":{"line":121,"column":33}},"loc":{"start":{"line":121,"column":68},"end":{"line":140,"column":1}},"line":121},"21":{"name":"(anonymous_21)","decl":{"start":{"line":123,"column":59},"end":{"line":123,"column":60}},"loc":{"start":{"line":123,"column":69},"end":{"line":124,"column":95}},"line":123},"22":{"name":"(anonymous_22)","decl":{"start":{"line":124,"column":25},"end":{"line":124,"column":26}},"loc":{"start":{"line":124,"column":35},"end":{"line":124,"column":94}},"line":124},"23":{"name":"(anonymous_23)","decl":{"start":{"line":128,"column":56},"end":{"line":128,"column":57}},"loc":{"start":{"line":128,"column":66},"end":{"line":128,"column":91}},"line":128},"24":{"name":"(anonymous_24)","decl":{"start":{"line":132,"column":51},"end":{"line":132,"column":52}},"loc":{"start":{"line":132,"column":61},"end":{"line":132,"column":83}},"line":132},"25":{"name":"parseRoomRow","decl":{"start":{"line":141,"column":9},"end":{"line":141,"column":21}},"loc":{"start":{"line":141,"column":51},"end":{"line":171,"column":1}},"line":141},"26":{"name":"(anonymous_26)","decl":{"start":{"line":142,"column":50},"end":{"line":142,"column":51}},"loc":{"start":{"line":142,"column":60},"end":{"line":142,"column":82}},"line":142},"27":{"name":"extractRoomNumber","decl":{"start":{"line":172,"column":9},"end":{"line":172,"column":26}},"loc":{"start":{"line":172,"column":34},"end":{"line":182,"column":1}},"line":172},"28":{"name":"(anonymous_28)","decl":{"start":{"line":174,"column":44},"end":{"line":174,"column":45}},"loc":{"start":{"line":174,"column":54},"end":{"line":174,"column":75}},"line":174},"29":{"name":"(anonymous_29)","decl":{"start":{"line":177,"column":58},"end":{"line":177,"column":59}},"loc":{"start":{"line":177,"column":68},"end":{"line":177,"column":89}},"line":177},"30":{"name":"extractRoomSeats","decl":{"start":{"line":183,"column":9},"end":{"line":183,"column":25}},"loc":{"start":{"line":183,"column":33},"end":{"line":192,"column":1}},"line":183},"31":{"name":"(anonymous_31)","decl":{"start":{"line":185,"column":44},"end":{"line":185,"column":45}},"loc":{"start":{"line":185,"column":54},"end":{"line":185,"column":75}},"line":185},"32":{"name":"extractRoomType","decl":{"start":{"line":193,"column":9},"end":{"line":193,"column":24}},"loc":{"start":{"line":193,"column":32},"end":{"line":202,"column":1}},"line":193},"33":{"name":"(anonymous_33)","decl":{"start":{"line":195,"column":44},"end":{"line":195,"column":45}},"loc":{"start":{"line":195,"column":54},"end":{"line":195,"column":75}},"line":195},"34":{"name":"extractRoomFurniture","decl":{"start":{"line":203,"column":9},"end":{"line":203,"column":29}},"loc":{"start":{"line":203,"column":37},"end":{"line":212,"column":1}},"line":203},"35":{"name":"(anonymous_35)","decl":{"start":{"line":205,"column":44},"end":{"line":205,"column":45}},"loc":{"start":{"line":205,"column":54},"end":{"line":205,"column":75}},"line":205},"36":{"name":"extractRoomHref","decl":{"start":{"line":213,"column":9},"end":{"line":213,"column":24}},"loc":{"start":{"line":213,"column":32},"end":{"line":222,"column":1}},"line":213},"37":{"name":"(anonymous_37)","decl":{"start":{"line":215,"column":44},"end":{"line":215,"column":45}},"loc":{"start":{"line":215,"column":54},"end":{"line":215,"column":75}},"line":215},"38":{"name":"(anonymous_38)","decl":{"start":{"line":217,"column":58},"end":{"line":217,"column":59}},"loc":{"start":{"line":217,"column":68},"end":{"line":217,"column":89}},"line":217},"39":{"name":"(anonymous_39)","decl":{"start":{"line":217,"column":107},"end":{"line":217,"column":108}},"loc":{"start":{"line":217,"column":117},"end":{"line":217,"column":137}},"line":217}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},{"start":{"line":35,"column":4},"end":{"line":37,"column":5}}],"line":35},"17":{"loc":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},{"start":{"line":45,"column":8},"end":{"line":47,"column":9}}],"line":45},"18":{"loc":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},{"start":{"line":49,"column":4},"end":{"line":51,"column":5}}],"line":49},"19":{"loc":{"start":{"line":62,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":70,"column":9}},{"start":{"line":62,"column":8},"end":{"line":70,"column":9}}],"line":62},"20":{"loc":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},{"start":{"line":78,"column":4},"end":{"line":80,"column":5}}],"line":78},"21":{"loc":{"start":{"line":86,"column":67},"end":{"line":87,"column":101}},"type":"binary-expr","locations":[{"start":{"line":86,"column":67},"end":{"line":86,"column":89}},{"start":{"line":87,"column":8},"end":{"line":87,"column":101}}],"line":86},"22":{"loc":{"start":{"line":87,"column":35},"end":{"line":87,"column":100}},"type":"binary-expr","locations":[{"start":{"line":87,"column":35},"end":{"line":87,"column":56}},{"start":{"line":87,"column":60},"end":{"line":87,"column":100}}],"line":87},"23":{"loc":{"start":{"line":90,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":96,"column":9}},{"start":{"line":90,"column":8},"end":{"line":96,"column":9}}],"line":90},"24":{"loc":{"start":{"line":92,"column":12},"end":{"line":95,"column":13}},"type":"if","locations":[{"start":{"line":92,"column":12},"end":{"line":95,"column":13}},{"start":{"line":92,"column":12},"end":{"line":95,"column":13}}],"line":92},"25":{"loc":{"start":{"line":104,"column":76},"end":{"line":104,"column":183}},"type":"binary-expr","locations":[{"start":{"line":104,"column":76},"end":{"line":104,"column":99}},{"start":{"line":104,"column":103},"end":{"line":104,"column":183}}],"line":104},"26":{"loc":{"start":{"line":104,"column":130},"end":{"line":104,"column":182}},"type":"binary-expr","locations":[{"start":{"line":104,"column":130},"end":{"line":104,"column":148}},{"start":{"line":104,"column":152},"end":{"line":104,"column":182}}],"line":104},"27":{"loc":{"start":{"line":105,"column":4},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":115,"column":5}},{"start":{"line":105,"column":4},"end":{"line":115,"column":5}}],"line":105},"28":{"loc":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},{"start":{"line":107,"column":8},"end":{"line":109,"column":9}}],"line":107},"29":{"loc":{"start":{"line":110,"column":83},"end":{"line":111,"column":96}},"type":"binary-expr","locations":[{"start":{"line":110,"column":83},"end":{"line":110,"column":106}},{"start":{"line":111,"column":12},"end":{"line":111,"column":96}}],"line":110},"30":{"loc":{"start":{"line":111,"column":39},"end":{"line":111,"column":95}},"type":"binary-expr","locations":[{"start":{"line":111,"column":39},"end":{"line":111,"column":60}},{"start":{"line":111,"column":64},"end":{"line":111,"column":95}}],"line":111},"31":{"loc":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},{"start":{"line":112,"column":8},"end":{"line":114,"column":9}}],"line":112},"32":{"loc":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},{"start":{"line":116,"column":4},"end":{"line":118,"column":5}}],"line":116},"33":{"loc":{"start":{"line":116,"column":8},"end":{"line":116,"column":43}},"type":"binary-expr","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":17}},{"start":{"line":116,"column":21},"end":{"line":116,"column":31}},{"start":{"line":116,"column":35},"end":{"line":116,"column":43}}],"line":116},"34":{"loc":{"start":{"line":123,"column":69},"end":{"line":124,"column":95}},"type":"binary-expr","locations":[{"start":{"line":123,"column":69},"end":{"line":123,"column":94}},{"start":{"line":124,"column":8},"end":{"line":124,"column":95}}],"line":123},"35":{"loc":{"start":{"line":124,"column":35},"end":{"line":124,"column":94}},"type":"binary-expr","locations":[{"start":{"line":124,"column":35},"end":{"line":124,"column":56}},{"start":{"line":124,"column":60},"end":{"line":124,"column":94}}],"line":124},"36":{"loc":{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},{"start":{"line":125,"column":4},"end":{"line":127,"column":5}}],"line":125},"37":{"loc":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},{"start":{"line":129,"column":4},"end":{"line":131,"column":5}}],"line":129},"38":{"loc":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},{"start":{"line":135,"column":8},"end":{"line":137,"column":9}}],"line":135},"39":{"loc":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},{"start":{"line":143,"column":4},"end":{"line":145,"column":5}}],"line":143},"40":{"loc":{"start":{"line":151,"column":4},"end":{"line":170,"column":5}},"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":170,"column":5}},{"start":{"line":151,"column":4},"end":{"line":170,"column":5}}],"line":151},"41":{"loc":{"start":{"line":151,"column":8},"end":{"line":151,"column":60}},"type":"binary-expr","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":18}},{"start":{"line":151,"column":22},"end":{"line":151,"column":31}},{"start":{"line":151,"column":35},"end":{"line":151,"column":43}},{"start":{"line":151,"column":47},"end":{"line":151,"column":60}}],"line":151},"42":{"loc":{"start":{"line":176,"column":8},"end":{"line":179,"column":9}},"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":179,"column":9}},{"start":{"line":176,"column":8},"end":{"line":179,"column":9}}],"line":176},"43":{"loc":{"start":{"line":178,"column":19},"end":{"line":178,"column":84}},"type":"cond-expr","locations":[{"start":{"line":178,"column":26},"end":{"line":178,"column":70}},{"start":{"line":178,"column":73},"end":{"line":178,"column":84}}],"line":178},"44":{"loc":{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},{"start":{"line":187,"column":8},"end":{"line":189,"column":9}}],"line":187},"45":{"loc":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},{"start":{"line":197,"column":8},"end":{"line":199,"column":9}}],"line":197},"46":{"loc":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},{"start":{"line":207,"column":8},"end":{"line":209,"column":9}}],"line":207},"47":{"loc":{"start":{"line":216,"column":8},"end":{"line":219,"column":9}},"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":219,"column":9}},{"start":{"line":216,"column":8},"end":{"line":219,"column":9}}],"line":216},"48":{"loc":{"start":{"line":218,"column":19},"end":{"line":218,"column":29}},"type":"binary-expr","locations":[{"start":{"line":218,"column":19},"end":{"line":218,"column":23}},{"start":{"line":218,"column":27},"end":{"line":218,"column":29}}],"line":218}},"s":{"0":1,"1":16,"2":16,"3":16,"4":16,"5":16,"6":74,"7":16,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":16,"21":16,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":2,"33":2,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":74,"41":74,"42":74,"43":74,"44":1,"45":0,"46":1,"47":1,"48":1,"49":1,"50":1,"51":74,"52":74,"53":74,"54":74,"55":74,"56":74,"57":74,"58":0,"59":74,"60":74,"61":1,"62":1,"63":74,"64":1,"65":0,"66":1,"67":1,"68":1,"69":1,"70":3779,"71":370,"72":1,"73":74,"74":370,"75":74,"76":74,"77":74,"78":74,"79":74,"80":74,"81":1,"82":74,"83":74,"84":74,"85":74,"86":139170,"87":10379,"88":74,"89":74,"90":1397,"91":74,"92":74,"93":74,"94":1397,"95":518,"96":74,"97":74,"98":74,"99":0,"100":74,"101":74,"102":74,"103":139170,"104":44,"105":74,"106":30,"107":44,"108":9880,"109":44,"110":0,"111":44,"112":8824,"113":44,"114":364,"115":364,"116":363,"117":44,"118":364,"119":8372,"120":364,"121":0,"122":364,"123":364,"124":364,"125":364,"126":364,"127":364,"128":363,"129":363,"130":363,"131":1,"132":364,"133":364,"134":364,"135":364,"136":364,"137":364,"138":1820,"139":364,"140":0,"141":364,"142":728,"143":728,"144":728,"145":728,"146":364,"147":0,"148":364,"149":1456,"150":1456,"151":1456,"152":1456,"153":364,"154":0,"155":364,"156":1092,"157":1092,"158":1092,"159":1092,"160":364,"161":0,"162":364,"163":364,"164":364,"165":364,"166":364,"167":1820,"168":364,"169":364,"170":0},"f":{"0":16,"1":74,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":74,"9":1,"10":3779,"11":370,"12":370,"13":74,"14":74,"15":139170,"16":10379,"17":1397,"18":1397,"19":518,"20":74,"21":139170,"22":44,"23":9880,"24":8824,"25":364,"26":8372,"27":364,"28":364,"29":1820,"30":364,"31":728,"32":364,"33":1456,"34":364,"35":1092,"36":364,"37":364,"38":1820,"39":364},"b":{"0":[1,1,1],"1":[1,0],"2":[16,0],"3":[16,0],"4":[16,16],"5":[0,16],"6":[16,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[16,0],"15":[16,16],"16":[1,1],"17":[74,0],"18":[0,1],"19":[74,0],"20":[0,1],"21":[3779,370],"22":[370,370],"23":[74,0],"24":[74,0],"25":[139170,8972],"26":[10379,2591],"27":[74,0],"28":[74,0],"29":[1397,518],"30":[518,444],"31":[74,0],"32":[0,74],"33":[74,74,74],"34":[139170,44],"35":[44,44],"36":[30,44],"37":[0,44],"38":[363,1],"39":[0,364],"40":[363,1],"41":[364,364,364,363],"42":[364,0],"43":[364,0],"44":[364,364],"45":[364,1092],"46":[364,728],"47":[364,0],"48":[364,0]},"inputSourceMap":{"version":3,"file":"/Users/BillyOrr/Desktop/project_team117/src/models/rooms/RoomParser.ts","sources":["/Users/BillyOrr/Desktop/project_team117/src/models/rooms/RoomParser.ts"],"names":[],"mappings":"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","sourcesContent":["// models/rooms/RoomParser.ts\n\nimport JSZip = require(\"jszip\");\nimport { parse } from \"parse5\";\nimport { Room } from \"./Rooms\";\nimport { InsightError } from \"../../controller/IInsightFacade\";\nimport { findNodes, getTextContent } from \"../utils/HtmlUtils\";\nimport { fetchGeolocation } from \"../utils/Geolocation\";\nimport * as path from \"path\";\n\n/**\n * Extracts room files from the provided ZIP object.\n * @param zip The JSZip object containing the dataset.\n * @returns An array of JSZip objects representing room files.\n */\nexport async function getRoomFiles(zip: JSZip): Promise<JSZip.JSZipObject[]> {\n\tconst indexFile = zip.file(\"index.htm\");\n\tif (!indexFile) {\n\t\tthrow new InsightError(\"Missing index.htm in the dataset - Team 117\");\n\t}\n\n\tconst indexContent = await indexFile.async(\"text\");\n\tconst document = parse(indexContent);\n\tconst buildingPaths = extractBuildingPaths(document);\n\n\tconst roomFiles: JSZip.JSZipObject[] = [];\n\tfor (const buildingPath of buildingPaths) {\n\t\tconst normalizedPath = buildingPath.replace(/^\\.\\//, \"\").replace(/^\\//, \"\");\n\t\tconst file = zip.file(normalizedPath);\n\t\tif (file) {\n\t\t\troomFiles.push(file);\n\t\t}\n\t}\n\n\tif (roomFiles.length === 0) {\n\t\tthrow new InsightError(\"No building files found in the dataset - Team 117\");\n\t}\n\n\treturn roomFiles;\n}\n\n/**\n * Processes the room files to extract room data.\n * @param roomFiles An array of JSZip objects representing room files.\n * @returns A promise that resolves to an array of Room objects.\n */\nexport async function processRoomFiles(roomFiles: JSZip.JSZipObject[]): Promise<Room[]> {\n\tconst rooms: Room[] = [];\n\tconst buildingGeoCache: Record<string, { lat: number; lon: number }> = {};\n\n\t// Process all room files concurrently\n\tconst filePromises = roomFiles.map(async (file) => {\n\t\tconst buildingContent = await file.async(\"text\");\n\t\tconst document = parse(buildingContent);\n\n\t\tconst buildingInfo = extractBuildingInfo(document, file.name);\n\n\t\t// Fetch geolocation if not already cached\n\t\tif (!buildingGeoCache[buildingInfo.address]) {\n\t\t\ttry {\n\t\t\t\tconst geo = await fetchGeolocation(buildingInfo.address);\n\t\t\t\tbuildingGeoCache[buildingInfo.address] = geo;\n\t\t\t} catch {\n\t\t\t\t// Skip this building if geolocation fails\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\tconst { lat, lon } = buildingGeoCache[buildingInfo.address];\n\t\treturn extractRoomsFromBuilding(document, buildingInfo, lat, lon);\n\t});\n\n\t// Wait for all promises to resolve\n\tconst results = await Promise.all(filePromises);\n\n\t// Flatten the results\n\tfor (const buildingRooms of results) {\n\t\trooms.push(...buildingRooms);\n\t}\n\n\tif (rooms.length === 0) {\n\t\tthrow new InsightError(\"No valid rooms found in the dataset - Team 117\");\n\t}\n\n\treturn rooms;\n}\n\n/**\n * Extracts building paths from the index.htm document.\n * @param document The parsed HTML document of index.htm.\n * @returns An array of building file paths.\n */\nfunction extractBuildingPaths(document: any): string[] {\n\tconst buildingPaths: string[] = [];\n\n\tconst tdNodes = findNodes(\n\t\tdocument,\n\t\t(node: any) =>\n\t\t\tnode.nodeName === \"td\" &&\n\t\t\tnode.attrs?.some((attr: any) => attr.name === \"class\" && attr.value.includes(\"views-field-title\"))\n\t);\n\n\tfor (const td of tdNodes) {\n\t\tconst aNode = findNodes(td, (node: any) => node.nodeName === \"a\")[0];\n\t\tif (aNode) {\n\t\t\tconst hrefAttr = aNode.attrs.find((attr: any) => attr.name === \"href\");\n\t\t\tif (hrefAttr) {\n\t\t\t\tconst hrefValue = hrefAttr.value.replace(/^\\.\\//, \"\").replace(/^\\//, \"\");\n\t\t\t\tbuildingPaths.push(hrefValue);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn buildingPaths;\n}\n\n/**\n * Extracts building information from a building HTML document.\n * @param document The parsed HTML document of the building file.\n * @param filename The name of the building file.\n * @returns An object containing fullname, shortname, and address of the building.\n */\nfunction extractBuildingInfo(\n\tdocument: any,\n\tfilename: string\n): { fullname: string; shortname: string; address: string } {\n\tlet fullname = \"\";\n\tconst shortname = path.basename(filename, \".htm\").toUpperCase();\n\tlet address = \"\";\n\n\tconst buildingInfoNode = findNodes(\n\t\tdocument,\n\t\t(node: any) =>\n\t\t\tnode.nodeName === \"div\" && node.attrs?.some((attr: any) => attr.name === \"id\" && attr.value === \"building-info\")\n\t)[0];\n\n\tif (buildingInfoNode) {\n\t\tconst h2Node = findNodes(buildingInfoNode, (node: any) => node.nodeName === \"h2\")[0];\n\t\tif (h2Node) {\n\t\t\tfullname = getTextContent(h2Node).trim();\n\t\t}\n\n\t\tconst addressNode = findNodes(\n\t\t\tbuildingInfoNode,\n\t\t\t(node: any) =>\n\t\t\t\tnode.nodeName === \"div\" &&\n\t\t\t\tnode.attrs?.some((attr: any) => attr.name === \"class\" && attr.value === \"building-field\")\n\t\t)[0];\n\t\tif (addressNode) {\n\t\t\taddress = getTextContent(addressNode).trim();\n\t\t}\n\t}\n\n\tif (!fullname || !shortname || !address) {\n\t\tthrow new InsightError(\"Failed to extract building information - Team 117\");\n\t}\n\n\treturn { fullname, shortname, address };\n}\n\n/**\n * Extracts rooms from a building HTML document.\n * @param document The parsed HTML document of the building file.\n * @param buildingInfo The building information object.\n * @param lat The latitude of the building.\n * @param lon The longitude of the building.\n * @returns An array of Room objects.\n */\nfunction extractRoomsFromBuilding(\n\tdocument: any,\n\tbuildingInfo: { fullname: string; shortname: string; address: string },\n\tlat: number,\n\tlon: number\n): Room[] {\n\tconst rooms: Room[] = [];\n\n\tconst roomTable = findNodes(\n\t\tdocument,\n\t\t(node: any) =>\n\t\t\tnode.nodeName === \"table\" &&\n\t\t\tnode.attrs?.some((attr: any) => attr.name === \"class\" && attr.value.includes(\"views-table\"))\n\t)[0];\n\n\tif (!roomTable) {\n\t\treturn rooms; // Building has no rooms\n\t}\n\n\tconst tbody = findNodes(roomTable, (node: any) => node.nodeName === \"tbody\")[0];\n\tif (!tbody) {\n\t\treturn rooms;\n\t}\n\n\tconst rows = findNodes(tbody, (node: any) => node.nodeName === \"tr\");\n\n\tfor (const row of rows) {\n\t\tconst room = parseRoomRow(row, buildingInfo, lat, lon);\n\t\tif (room) {\n\t\t\trooms.push(room);\n\t\t}\n\t}\n\n\treturn rooms;\n}\n\n/**\n * Parses a table row to extract room information.\n * @param row The table row node.\n * @param buildingInfo The building information object.\n * @param lat The latitude of the building.\n * @param lon The longitude of the building.\n * @returns A Room object or null if parsing fails.\n */\nfunction parseRoomRow(\n\trow: any,\n\tbuildingInfo: { fullname: string; shortname: string; address: string },\n\tlat: number,\n\tlon: number\n): Room | null {\n\tconst cells = findNodes(row, (node: any) => node.nodeName === \"td\");\n\n\tif (cells.length === 0) {\n\t\treturn null;\n\t}\n\n\t// Extract room details from the cells\n\tconst roomNumber = extractRoomNumber(cells);\n\tconst roomSeats = extractRoomSeats(cells);\n\tconst roomType = extractRoomType(cells);\n\tconst roomFurniture = extractRoomFurniture(cells);\n\tconst roomHref = extractRoomHref(cells);\n\n\t// Check if all required room details are present\n\tif (roomNumber && roomSeats && roomType && roomFurniture) {\n\t\tconst roomName = `${buildingInfo.shortname}_${roomNumber}`;\n\t\tconst roomData = {\n\t\t\tfullname: buildingInfo.fullname,\n\t\t\tshortname: buildingInfo.shortname,\n\t\t\tnumber: roomNumber,\n\t\t\tname: roomName,\n\t\t\taddress: buildingInfo.address,\n\t\t\tlat: lat,\n\t\t\tlon: lon,\n\t\t\tseats: roomSeats,\n\t\t\ttype: roomType,\n\t\t\tfurniture: roomFurniture,\n\t\t\thref: roomHref,\n\t\t};\n\t\treturn new Room(roomData);\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/**\n * Helper function to extract room number from cells.\n * @param cells An array of cell nodes.\n * @returns The room number as a string.\n */\nfunction extractRoomNumber(cells: any[]): string {\n\tfor (const cell of cells) {\n\t\tconst classValue = cell.attrs?.find((attr: any) => attr.name === \"class\")?.value;\n\t\tconst cellContent = getTextContent(cell).trim();\n\n\t\tif (classValue?.includes(\"views-field-field-room-number\")) {\n\t\t\tconst aTag = findNodes(cell, (node: any) => node.nodeName === \"a\")[0];\n\t\t\treturn aTag ? getTextContent(aTag).trim() : cellContent;\n\t\t}\n\t}\n\treturn \"\";\n}\n\n/**\n * Helper function to extract room seats from cells.\n * @param cells An array of cell nodes.\n * @returns The number of seats as a number.\n */\nfunction extractRoomSeats(cells: any[]): number {\n\tfor (const cell of cells) {\n\t\tconst classValue = cell.attrs?.find((attr: any) => attr.name === \"class\")?.value;\n\t\tconst cellContent = getTextContent(cell).trim();\n\n\t\tif (classValue?.includes(\"views-field-field-room-capacity\")) {\n\t\t\treturn parseInt(cellContent, 10);\n\t\t}\n\t}\n\treturn 0;\n}\n\n/**\n * Helper function to extract room type from cells.\n * @param cells An array of cell nodes.\n * @returns The room type as a string.\n */\nfunction extractRoomType(cells: any[]): string {\n\tfor (const cell of cells) {\n\t\tconst classValue = cell.attrs?.find((attr: any) => attr.name === \"class\")?.value;\n\t\tconst cellContent = getTextContent(cell).trim();\n\n\t\tif (classValue?.includes(\"views-field-field-room-type\")) {\n\t\t\treturn cellContent;\n\t\t}\n\t}\n\treturn \"\";\n}\n\n/**\n * Helper function to extract room furniture from cells.\n * @param cells An array of cell nodes.\n * @returns The room furniture as a string.\n */\nfunction extractRoomFurniture(cells: any[]): string {\n\tfor (const cell of cells) {\n\t\tconst classValue = cell.attrs?.find((attr: any) => attr.name === \"class\")?.value;\n\t\tconst cellContent = getTextContent(cell).trim();\n\n\t\tif (classValue?.includes(\"views-field-field-room-furniture\")) {\n\t\t\treturn cellContent;\n\t\t}\n\t}\n\treturn \"\";\n}\n\n/**\n * Helper function to extract room href from cells.\n * @param cells An array of cell nodes.\n * @returns The room href as a string.\n */\nfunction extractRoomHref(cells: any[]): string {\n\tfor (const cell of cells) {\n\t\tconst classValue = cell.attrs?.find((attr: any) => attr.name === \"class\")?.value;\n\n\t\tif (classValue?.includes(\"views-field-field-room-number\")) {\n\t\t\tconst href = findNodes(cell, (node: any) => node.nodeName === \"a\")[0]?.attrs?.find(\n\t\t\t\t(attr: any) => attr.name === \"href\"\n\t\t\t)?.value;\n\t\t\treturn href ?? \"\";\n\t\t}\n\t}\n\treturn \"\";\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"40d7ee9bb8a168b3e08a65f77d27b0854423fe29","contentHash":"fdb36ee8483b6db64e3ae02e4bef164a9bc3000d84e8a4709bf0f63daa561bd8"},"/Users/BillyOrr/Desktop/project_team117/src/models/rooms/Rooms.ts":{"path":"/Users/BillyOrr/Desktop/project_team117/src/models/rooms/Rooms.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":42}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":44}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":38}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":34}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":40}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":32}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":32}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":36}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":34}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":44}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":34}},"13":{"start":{"line":30,"column":0},"end":{"line":30,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":26},"end":{"line":28,"column":5}},"line":16}},"branchMap":{},"s":{"0":1,"1":1,"2":363,"3":363,"4":363,"5":363,"6":363,"7":363,"8":363,"9":363,"10":363,"11":363,"12":363,"13":1},"f":{"0":363},"b":{},"inputSourceMap":{"version":3,"file":"/Users/BillyOrr/Desktop/project_team117/src/models/rooms/Rooms.ts","sources":["/Users/BillyOrr/Desktop/project_team117/src/models/rooms/Rooms.ts"],"names":[],"mappings":";;;AAEA,MAAa,IAAI;IACA,QAAQ,CAAS;IACjB,SAAS,CAAS;IAClB,MAAM,CAAS;IACf,IAAI,CAAS;IACb,OAAO,CAAS;IAChB,GAAG,CAAS;IACZ,GAAG,CAAS;IACZ,KAAK,CAAS;IACd,IAAI,CAAS;IACb,SAAS,CAAS;IAClB,IAAI,CAAS;IAG7B,YAAY,QAAa;QACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;QACxB,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC3B,CAAC;CACD;AA3BD,oBA2BC","sourcesContent":["// models/rooms/Room.ts\n\nexport class Room {\n\tpublic readonly fullname: string;\n\tpublic readonly shortname: string;\n\tpublic readonly number: string;\n\tpublic readonly name: string;\n\tpublic readonly address: string;\n\tpublic readonly lat: number;\n\tpublic readonly lon: number;\n\tpublic readonly seats: number;\n\tpublic readonly type: string;\n\tpublic readonly furniture: string;\n\tpublic readonly href: string;\n\t[key: string]: any;\n\n\tconstructor(roomData: any) {\n\t\tthis.fullname = roomData.fullname;\n\t\tthis.shortname = roomData.shortname;\n\t\tthis.number = roomData.number;\n\t\tthis.name = roomData.name;\n\t\tthis.address = roomData.address;\n\t\tthis.lat = roomData.lat;\n\t\tthis.lon = roomData.lon;\n\t\tthis.seats = roomData.seats;\n\t\tthis.type = roomData.type;\n\t\tthis.furniture = roomData.furniture;\n\t\tthis.href = roomData.href;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b99fe979e7e57867f24bcb992910583734f40d77","contentHash":"c949a3c8d00d1ada1e54f129dd89374fc2aaa20221848e9c5122fd58196c2349"},"/Users/BillyOrr/Desktop/project_team117/src/models/utils/HtmlUtils.ts":{"path":"/Users/BillyOrr/Desktop/project_team117/src/models/utils/HtmlUtils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"2":{"start":{"line":5,"column":17},"end":{"line":5,"column":19}},"3":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":26}},"5":{"start":{"line":9,"column":4},"end":{"line":13,"column":5}},"6":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"7":{"start":{"line":11,"column":12},"end":{"line":11,"column":64}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":18}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}},"10":{"start":{"line":18,"column":15},"end":{"line":18,"column":17}},"11":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":27}},"13":{"start":{"line":22,"column":4},"end":{"line":26,"column":5}},"14":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":42}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":16}},"17":{"start":{"line":29,"column":0},"end":{"line":29,"column":40}}},"fnMap":{"0":{"name":"findNodes","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":36},"end":{"line":15,"column":1}},"line":4},"1":{"name":"getTextContent","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":23}},"loc":{"start":{"line":17,"column":30},"end":{"line":28,"column":1}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},{"start":{"line":6,"column":4},"end":{"line":8,"column":5}}],"line":6},"1":{"loc":{"start":{"line":9,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":13,"column":5}},{"start":{"line":9,"column":4},"end":{"line":13,"column":5}}],"line":9},"2":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{"line":19,"column":4},"end":{"line":21,"column":5}}],"line":19},"3":{"loc":{"start":{"line":22,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":26,"column":5}},{"start":{"line":22,"column":4},"end":{"line":26,"column":5}}],"line":22}},"s":{"0":1,"1":1,"2":315999,"3":315999,"4":3518,"5":315999,"6":154753,"7":314448,"8":315999,"9":1,"10":12820,"11":12820,"12":7064,"13":12820,"14":5756,"15":8668,"16":12820,"17":1},"f":{"0":315999,"1":12820},"b":{"0":[3518,312481],"1":[154753,161246],"2":[7064,5756],"3":[5756,7064]},"inputSourceMap":{"version":3,"file":"/Users/BillyOrr/Desktop/project_team117/src/models/utils/HtmlUtils.ts","sources":["/Users/BillyOrr/Desktop/project_team117/src/models/utils/HtmlUtils.ts"],"names":[],"mappings":";;;AAEA,SAAgB,SAAS,CAAC,IAAS,EAAE,SAAiC;IACrE,IAAI,MAAM,GAAU,EAAE,CAAC;IAEvB,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClB;IAED,IAAI,IAAI,CAAC,UAAU,EAAE;QACpB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YACpC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;SACpD;KACD;IAED,OAAO,MAAM,CAAC;AACf,CAAC;AAdD,8BAcC;AAED,SAAgB,cAAc,CAAC,IAAS;IACvC,IAAI,IAAI,GAAG,EAAE,CAAC;IAEd,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;QAC9B,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,IAAI,IAAI,CAAC,UAAU,EAAE;QACpB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YACpC,IAAI,IAAI,cAAc,CAAC,KAAK,CAAC,CAAC;SAC9B;KACD;IAED,OAAO,IAAI,CAAC;AACb,CAAC;AAdD,wCAcC","sourcesContent":["// models/utils/HtmlUtils.ts\n\nexport function findNodes(node: any, predicate: (node: any) => boolean): any[] {\n\tlet result: any[] = [];\n\n\tif (predicate(node)) {\n\t\tresult.push(node);\n\t}\n\n\tif (node.childNodes) {\n\t\tfor (const child of node.childNodes) {\n\t\t\tresult = result.concat(findNodes(child, predicate));\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function getTextContent(node: any): string {\n\tlet text = \"\";\n\n\tif (node.nodeName === \"#text\") {\n\t\ttext += node.value;\n\t}\n\n\tif (node.childNodes) {\n\t\tfor (const child of node.childNodes) {\n\t\t\ttext += getTextContent(child);\n\t\t}\n\t}\n\n\treturn text;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"63fb2bcf6ef23ede733b15d22a21ac8e85017c5f","contentHash":"dfb8394fa8440d11c289e8b5e692898b5d03e13c044b47b33f4351d1a316214d"},"/Users/BillyOrr/Desktop/project_team117/src/models/utils/Geolocation.ts":{"path":"/Users/BillyOrr/Desktop/project_team117/src/models/utils/Geolocation.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":34}},"26":{"start":{"line":27,"column":13},"end":{"line":27,"column":42}},"27":{"start":{"line":28,"column":25},"end":{"line":28,"column":67}},"28":{"start":{"line":30,"column":27},"end":{"line":30,"column":54}},"29":{"start":{"line":31,"column":16},"end":{"line":31,"column":96}},"30":{"start":{"line":32,"column":4},"end":{"line":58,"column":7}},"31":{"start":{"line":33,"column":8},"end":{"line":57,"column":11}},"32":{"start":{"line":34,"column":26},"end":{"line":34,"column":28}},"33":{"start":{"line":35,"column":12},"end":{"line":37,"column":15}},"34":{"start":{"line":36,"column":16},"end":{"line":36,"column":33}},"35":{"start":{"line":38,"column":12},"end":{"line":54,"column":15}},"36":{"start":{"line":39,"column":16},"end":{"line":53,"column":17}},"37":{"start":{"line":40,"column":39},"end":{"line":40,"column":58}},"38":{"start":{"line":41,"column":20},"end":{"line":49,"column":21}},"39":{"start":{"line":42,"column":24},"end":{"line":42,"column":108}},"40":{"start":{"line":44,"column":25},"end":{"line":49,"column":21}},"41":{"start":{"line":45,"column":24},"end":{"line":45,"column":78}},"42":{"start":{"line":48,"column":24},"end":{"line":48,"column":98}},"43":{"start":{"line":52,"column":20},"end":{"line":52,"column":116}},"44":{"start":{"line":56,"column":12},"end":{"line":56,"column":98}},"45":{"start":{"line":60,"column":0},"end":{"line":60,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"fetchGeolocation","decl":{"start":{"line":29,"column":15},"end":{"line":29,"column":31}},"loc":{"start":{"line":29,"column":61},"end":{"line":59,"column":1}},"line":29},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":23},"end":{"line":32,"column":24}},"loc":{"start":{"line":32,"column":44},"end":{"line":58,"column":5}},"line":32},"8":{"name":"(anonymous_8)","decl":{"start":{"line":33,"column":21},"end":{"line":33,"column":22}},"loc":{"start":{"line":33,"column":30},"end":{"line":55,"column":9}},"line":33},"9":{"name":"(anonymous_9)","decl":{"start":{"line":35,"column":27},"end":{"line":35,"column":28}},"loc":{"start":{"line":35,"column":38},"end":{"line":37,"column":13}},"line":35},"10":{"name":"(anonymous_10)","decl":{"start":{"line":38,"column":26},"end":{"line":38,"column":27}},"loc":{"start":{"line":38,"column":32},"end":{"line":54,"column":13}},"line":38},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":23},"end":{"line":55,"column":24}},"loc":{"start":{"line":55,"column":30},"end":{"line":57,"column":9}},"line":55}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":29,"column":41},"end":{"line":29,"column":59}},"type":"default-arg","locations":[{"start":{"line":29,"column":51},"end":{"line":29,"column":59}}],"line":29},"17":{"loc":{"start":{"line":41,"column":20},"end":{"line":49,"column":21}},"type":"if","locations":[{"start":{"line":41,"column":20},"end":{"line":49,"column":21}},{"start":{"line":41,"column":20},"end":{"line":49,"column":21}}],"line":41},"18":{"loc":{"start":{"line":44,"column":25},"end":{"line":49,"column":21}},"type":"if","locations":[{"start":{"line":44,"column":25},"end":{"line":49,"column":21}},{"start":{"line":44,"column":25},"end":{"line":49,"column":21}}],"line":44},"19":{"loc":{"start":{"line":44,"column":29},"end":{"line":44,"column":89}},"type":"binary-expr","locations":[{"start":{"line":44,"column":29},"end":{"line":44,"column":57}},{"start":{"line":44,"column":61},"end":{"line":44,"column":89}}],"line":44}},"s":{"0":1,"1":17,"2":17,"3":17,"4":17,"5":17,"6":74,"7":17,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":17,"21":17,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":74,"29":74,"30":74,"31":74,"32":74,"33":74,"34":74,"35":74,"36":74,"37":74,"38":74,"39":0,"40":74,"41":74,"42":0,"43":0,"44":0,"45":1},"f":{"0":17,"1":74,"2":0,"3":1,"4":0,"5":1,"6":74,"7":74,"8":74,"9":74,"10":74,"11":0},"b":{"0":[1,1,1],"1":[1,0],"2":[17,0],"3":[17,0],"4":[17,17],"5":[2,15],"6":[15,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[17,0],"15":[17,17],"16":[74],"17":[0,74],"18":[74,0],"19":[74,74]},"inputSourceMap":{"version":3,"file":"/Users/BillyOrr/Desktop/project_team117/src/models/utils/Geolocation.ts","sources":["/Users/BillyOrr/Desktop/project_team117/src/models/utils/Geolocation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,2CAA6B;AAC7B,oEAA+D;AAExD,KAAK,UAAU,gBAAgB,CACrC,OAAe,EACf,UAA2B,IAAI,CAAC,GAAG;IAEnC,MAAM,cAAc,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;IACnD,MAAM,GAAG,GAAG,gEAAgE,cAAc,EAAE,CAAC;IAE7F,OAAO,IAAI,OAAO,CAA+B,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACpE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE;YACpB,IAAI,OAAO,GAAG,EAAE,CAAC;YAEjB,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;gBACxB,OAAO,IAAI,KAAK,CAAC;YAClB,CAAC,CAAC,CAAC;YAEH,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;gBAClB,IAAI;oBACH,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBACvC,IAAI,UAAU,CAAC,KAAK,EAAE;wBACrB,MAAM,CAAC,IAAI,6BAAY,CAAC,sBAAsB,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;qBACnE;yBAAM,IAAI,UAAU,CAAC,GAAG,KAAK,SAAS,IAAI,UAAU,CAAC,GAAG,KAAK,SAAS,EAAE;wBACxE,OAAO,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;qBACtD;yBAAM;wBACN,MAAM,CAAC,IAAI,6BAAY,CAAC,8BAA8B,CAAC,CAAC,CAAC;qBACzD;iBACD;gBAAC,OAAO,CAAM,EAAE;oBAChB,MAAM,CAAC,IAAI,6BAAY,CAAC,yCAAyC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC/E;YACF,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;YACpB,MAAM,CAAC,IAAI,6BAAY,CAAC,+BAA+B,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC;AAjCD,4CAiCC","sourcesContent":["// Geolocation.ts\n\nimport * as http from \"http\";\nimport { InsightError } from \"../../controller/IInsightFacade\";\n\nexport async function fetchGeolocation(\n\taddress: string,\n\thttpGet: typeof http.get = http.get\n): Promise<{ lat: number; lon: number }> {\n\tconst encodedAddress = encodeURIComponent(address);\n\tconst url = `http://cs310.students.cs.ubc.ca:11316/api/v1/project_team117/${encodedAddress}`;\n\n\treturn new Promise<{ lat: number; lon: number }>((resolve, reject) => {\n\t\thttpGet(url, (res) => {\n\t\t\tlet rawData = \"\";\n\n\t\t\tres.on(\"data\", (chunk) => {\n\t\t\t\trawData += chunk;\n\t\t\t});\n\n\t\t\tres.on(\"end\", () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst parsedData = JSON.parse(rawData);\n\t\t\t\t\tif (parsedData.error) {\n\t\t\t\t\t\treject(new InsightError(`Geolocation error: ${parsedData.error}`));\n\t\t\t\t\t} else if (parsedData.lat !== undefined && parsedData.lon !== undefined) {\n\t\t\t\t\t\tresolve({ lat: parsedData.lat, lon: parsedData.lon });\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(new InsightError(\"Invalid geolocation response\"));\n\t\t\t\t\t}\n\t\t\t\t} catch (e: any) {\n\t\t\t\t\treject(new InsightError(`Failed to parse geolocation response: ${e.message}`));\n\t\t\t\t}\n\t\t\t});\n\t\t}).on(\"error\", (e) => {\n\t\t\treject(new InsightError(`Geolocation request failed: ${e.message}`));\n\t\t});\n\t});\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"769839f21916a6515fe3da83c6444a347808249a","contentHash":"f7121d9352e7d3cef3c15196a87005c8bdaafbf7aea5addc28078cb822deffc4"}}